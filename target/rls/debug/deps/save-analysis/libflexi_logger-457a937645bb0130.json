{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2","program":"C:\\Users\\Spencer Du\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","flexi_logger","C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"colors\"","--cfg","feature=\"default\"","--cfg","feature=\"regex\"","--cfg","feature=\"textfilter\"","--cfg","feature=\"yansi\"","-C","metadata=457a937645bb0130","-C","extra-filename=-457a937645bb0130","--out-dir","c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps","--extern","chrono=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libchrono-93ea78b572bc5db3.rmeta","--extern","glob=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libglob-c592b5244f4deb16.rmeta","--extern","log=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\liblog-32c2bbb56c5ba20c.rmeta","--extern","regex=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libregex-e2be6d21a5a702cf.rmeta","--extern","thiserror=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libthiserror-1cf4a0ba8400aea0.rmeta","--extern","yansi=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libyansi-8bacfbfce867610b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Spencer Du\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libflexi_logger-457a937645bb0130.rmeta"},"prelude":{"crate_id":{"name":"flexi_logger","disambiguator":[14252609199751864852,11295982611400405522]},"crate_root":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src","external_crates":[{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","num":14,"id":{"name":"chrono","disambiguator":[10649170991494853603,12659413269450972129]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","num":15,"id":{"name":"time","disambiguator":[14167813033988452127,11844181453582105443]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","num":16,"id":{"name":"winapi","disambiguator":[9922898774521769556,13114685131277741963]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","num":17,"id":{"name":"num_integer","disambiguator":[16319462141834495537,14217651545691424615]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","num":18,"id":{"name":"num_traits","disambiguator":[9658936450980938914,14161967064833628679]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","num":19,"id":{"name":"log","disambiguator":[16086532284763077312,2157378512398017616]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","num":20,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","num":21,"id":{"name":"thiserror","disambiguator":[17750383167592215021,2252433426246877498]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","num":22,"id":{"name":"thiserror_impl","disambiguator":[4341868729057966395,16178238876576362454]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","num":23,"id":{"name":"regex","disambiguator":[16974154099147900068,15429397003521573054]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","num":24,"id":{"name":"aho_corasick","disambiguator":[15029654622415795170,6396495382870633378]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","num":25,"id":{"name":"memchr","disambiguator":[814983487202627147,10592998736631852064]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","num":26,"id":{"name":"regex_syntax","disambiguator":[6226353088624768848,5143369488308957155]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","num":27,"id":{"name":"thread_local","disambiguator":[12819820179597173190,2678990361973432459]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","num":28,"id":{"name":"lazy_static","disambiguator":[17281579441627161632,7326486140096487162]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","num":29,"id":{"name":"yansi","disambiguator":[774210046443821396,17425816131718122399]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","num":30,"id":{"name":"glob","disambiguator":[2612780735221363628,6061723776188264769]}}],"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":0,"byte_end":2942,"line_start":1,"line_end":79,"column_start":1,"column_end":33}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers.rs","byte_start":99871,"byte_end":99884,"line_start":104,"line_end":104,"column_start":33,"column_end":46},"alias_span":null,"name":"FileLogWriter","value":"","parent":{"krate":0,"index":295}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers.rs","byte_start":99886,"byte_end":99906,"line_start":104,"line_end":104,"column_start":48,"column_end":68},"alias_span":null,"name":"FileLogWriterBuilder","value":"","parent":{"krate":0,"index":295}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers.rs","byte_start":99935,"byte_end":99944,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"LogWriter","value":"","parent":{"krate":0,"index":295}},{"kind":"Use","ref_id":{"krate":19,"index":177},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1621,"byte_end":1626,"line_start":47,"line_end":47,"column_start":15,"column_end":20},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":198},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1628,"byte_end":1639,"line_start":47,"line_end":47,"column_start":22,"column_end":33},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":261},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1641,"byte_end":1647,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1680,"byte_end":1691,"line_start":49,"line_end":49,"column_start":30,"column_end":41},"alias_span":null,"name":"DeferredNow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1721,"byte_end":1737,"line_start":50,"line_end":50,"column_start":29,"column_end":45},"alias_span":null,"name":"FlexiLoggerError","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1763,"byte_end":1764,"line_start":51,"line_end":51,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1801,"byte_end":1815,"line_start":52,"line_end":52,"column_start":36,"column_end":50},"alias_span":null,"name":"LogSpecBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1817,"byte_end":1833,"line_start":52,"line_end":52,"column_start":52,"column_end":68},"alias_span":null,"name":"LogSpecification","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1835,"byte_end":1847,"line_start":52,"line_end":52,"column_start":70,"column_end":82},"alias_span":null,"name":"ModuleFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1874,"byte_end":1877,"line_start":53,"line_end":53,"column_start":25,"column_end":28},"alias_span":null,"name":"Age","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1879,"byte_end":1886,"line_start":53,"line_end":53,"column_start":30,"column_end":37},"alias_span":null,"name":"Cleanup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1888,"byte_end":1897,"line_start":53,"line_end":53,"column_start":39,"column_end":48},"alias_span":null,"name":"Criterion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1899,"byte_end":1908,"line_start":53,"line_end":53,"column_start":50,"column_end":59},"alias_span":null,"name":"Duplicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1910,"byte_end":1919,"line_start":53,"line_end":53,"column_start":61,"column_end":70},"alias_span":null,"name":"LogTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1921,"byte_end":1927,"line_start":53,"line_end":53,"column_start":72,"column_end":78},"alias_span":null,"name":"Logger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1929,"byte_end":1935,"line_start":53,"line_end":53,"column_start":80,"column_end":86},"alias_span":null,"name":"Naming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1977,"byte_end":1998,"line_start":54,"line_end":54,"column_start":40,"column_end":61},"alias_span":null,"name":"ReconfigurationHandle","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":0,"byte_end":2942,"line_start":1,"line_end":79,"column_start":1,"column_end":33},"name":"","qualname":"::","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":11},{"krate":0,"index":15},{"krate":0,"index":41},{"krate":0,"index":55},{"krate":0,"index":102},{"krate":0,"index":203},{"krate":0,"index":274},{"krate":0,"index":295},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":491},{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" A flexible and easy-to-use logger that writes logs to stderr and/or to files\n or other output streams.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(clippy :: all)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":23,"byte_end":44,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"deny(clippy :: pedantic)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":45,"byte_end":71,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"allow(clippy :: unused_self)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":72,"byte_end":102,"line_start":4,"line_end":4,"column_start":1,"column_end":31}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":103,"byte_end":143,"line_start":5,"line_end":5,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","byte_start":3179,"byte_end":3190,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"DeferredNow","qualname":"::deferred_now::DeferredNow","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deferred timestamp creation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","byte_start":3433,"byte_end":3436,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"now","qualname":"<DeferredNow>::now","value":"fn (&'a mut self) -> &'a DateTime<Local>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the timestamp.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":4002,"byte_end":4020,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"OutputBadDirectory","qualname":"::flexi_error::FlexiLoggerError::OutputBadDirectory","value":"FlexiLoggerError::OutputBadDirectory","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Log file cannot be written because the specified path is not a directory.\n","sig":null,"attributes":[{"value":"error(\"Log file cannot be written because the specified path is not a directory\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":3913,"byte_end":3997,"line_start":10,"line_end":10,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":4224,"byte_end":4243,"line_start":17,"line_end":17,"column_start":5,"column_end":24},"name":"OutputCleanupThread","qualname":"::flexi_error::FlexiLoggerError::OutputCleanupThread","value":"FlexiLoggerError::OutputCleanupThread(std::io::Error)","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Spawning the cleanup thread failed.","sig":null,"attributes":[{"value":"error(\"Spawning the cleanup thread failed.\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":4172,"byte_end":4219,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":4477,"byte_end":4485,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"OutputIo","qualname":"::flexi_error::FlexiLoggerError::OutputIo","value":"FlexiLoggerError::OutputIo(std::io::Error)","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Log cannot be written, e.g. because the configured output directory is not accessible.\n","sig":null,"attributes":[{"value":"error(\"Log cannot be written, e.g. because the configured output directory is not accessible\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":4361,"byte_end":4472,"line_start":20,"line_end":22,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":5348,"byte_end":5359,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"LevelFilter","qualname":"::flexi_error::FlexiLoggerError::LevelFilter","value":"FlexiLoggerError::LevelFilter(String)","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Invalid level filter.\n","sig":null,"attributes":[{"value":"error(\"Invalid level filter\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":5311,"byte_end":5343,"line_start":46,"line_end":46,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":5472,"byte_end":5477,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Parse","qualname":"::flexi_error::FlexiLoggerError::Parse","value":"FlexiLoggerError::Parse(String, LogSpecification)","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Failed to parse log specification.\n","sig":null,"attributes":[{"value":"error(\"Failed to parse log specification: {0}\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":5417,"byte_end":5467,"line_start":50,"line_end":50,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":5593,"byte_end":5596,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Log","qualname":"::flexi_error::FlexiLoggerError::Log","value":"FlexiLoggerError::Log(log::SetLoggerError)","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Logger initialization failed.\n","sig":null,"attributes":[{"value":"error(\"Logger initialization failed\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":5548,"byte_end":5588,"line_start":54,"line_end":54,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":5737,"byte_end":5743,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Poison","qualname":"::flexi_error::FlexiLoggerError::Poison","value":"FlexiLoggerError::Poison","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Some synchronization object is poisoned.\n","sig":null,"attributes":[{"value":"error(\"Some synchronization object is poisoned\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":5681,"byte_end":5732,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_error.rs","byte_start":3808,"byte_end":3824,"line_start":8,"line_end":8,"column_start":10,"column_end":26},"name":"FlexiLoggerError","qualname":"::flexi_error::FlexiLoggerError","value":"FlexiLoggerError::{OutputBadDirectory, OutputCleanupThread, OutputIo, LevelFilter, Parse, Log, Poison}","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":522},{"krate":0,"index":525}],"decl_id":null,"docs":" Describes errors in the initialization of `flexi_logger`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":11594,"byte_end":11608,"line_start":11,"line_end":11,"column_start":8,"column_end":22},"name":"default_format","qualname":"::formats::default_format","value":"fn (w: &mut dyn std::io::Write, _now: &mut DeferredNow, record: &Record) -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A logline-formatter that produces log lines like <br>\n ```INFO [my_prog::some_submodule] Task successfully read from conf.json```","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":12271,"byte_end":12293,"line_start":37,"line_end":37,"column_start":8,"column_end":30},"name":"colored_default_format","qualname":"::formats::colored_default_format","value":"fn (w: &mut dyn std::io::Write, _now: &mut DeferredNow, record: &Record) -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A colored version of the logline-formatter `default_format`\n that produces log lines like <br>\n <code><span style=\"color:red\">ERROR</span> &#91;my_prog::some_submodule&#93; <span\n style=\"color:red\">File not found</span></code>","sig":null,"attributes":[{"value":"allow(clippy :: doc_markdown)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":11878,"byte_end":11908,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"colors\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":12237,"byte_end":12263,"line_start":36,"line_end":36,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":12874,"byte_end":12884,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"opt_format","qualname":"::formats::opt_format","value":"fn (w: &mut dyn std::io::Write, now: &mut DeferredNow, record: &Record) -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A logline-formatter that produces log lines with timestamp and file location, like\n <br>\n ```[2016-01-13 15:25:01.640870 +01:00] INFO [src/foo/bar:26] Task successfully read from conf.json```\n <br>","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":13429,"byte_end":13447,"line_start":84,"line_end":84,"column_start":8,"column_end":26},"name":"colored_opt_format","qualname":"::formats::colored_opt_format","value":"fn (w: &mut dyn std::io::Write, now: &mut DeferredNow, record: &Record) -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A colored version of the logline-formatter `opt_format`.","sig":null,"attributes":[{"value":"cfg(feature = \"colors\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":13395,"byte_end":13421,"line_start":83,"line_end":83,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":14169,"byte_end":14184,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"detailed_format","qualname":"::formats::detailed_format","value":"fn (w: &mut dyn std::io::Write, now: &mut DeferredNow, record: &Record) -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A logline-formatter that produces log lines like\n <br>\n ```[2016-01-13 15:25:01.640870 +01:00] INFO [foo::bar] src/foo/bar.rs:26: Task successfully read from conf.json```\n <br>\n i.e. with timestamp, module path and file location.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":14791,"byte_end":14814,"line_start":135,"line_end":135,"column_start":8,"column_end":31},"name":"colored_detailed_format","qualname":"::formats::colored_detailed_format","value":"fn (w: &mut dyn std::io::Write, now: &mut DeferredNow, record: &Record) -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A colored version of the logline-formatter `detailed_format`.","sig":null,"attributes":[{"value":"cfg(feature = \"colors\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":14757,"byte_end":14783,"line_start":134,"line_end":134,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":15603,"byte_end":15614,"line_start":162,"line_end":162,"column_start":8,"column_end":19},"name":"with_thread","qualname":"::formats::with_thread","value":"fn (w: &mut dyn std::io::Write, now: &mut DeferredNow, record: &Record) -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A logline-formatter that produces log lines like\n <br>\n ```[2016-01-13 15:25:01.640870 +01:00] T[taskreader] INFO [src/foo/bar:26] Task successfully read from conf.json```\n <br>\n i.e. with timestamp, thread name and file location.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":16225,"byte_end":16244,"line_start":187,"line_end":187,"column_start":8,"column_end":27},"name":"colored_with_thread","qualname":"::formats::colored_with_thread","value":"fn (w: &mut dyn std::io::Write, now: &mut DeferredNow, record: &Record) -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" A colored version of the logline-formatter `with_thread`.","sig":null,"attributes":[{"value":"cfg(feature = \"colors\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":16191,"byte_end":16217,"line_start":186,"line_end":186,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":16905,"byte_end":16910,"line_start":209,"line_end":209,"column_start":8,"column_end":13},"name":"style","qualname":"::formats::style","value":"fn <T> (level: log::Level, item: T) -> yansi::Paint<T>","parent":null,"children":[],"decl_id":null,"docs":" Helper function that is used in the provided colored format functions.","sig":null,"attributes":[{"value":"cfg(feature = \"colors\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\formats.rs","byte_start":16871,"byte_end":16897,"line_start":208,"line_end":208,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":19526,"byte_end":19542,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"LogSpecification","qualname":"::log_specification::LogSpecification","value":"LogSpecification {  }","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"decl_id":null,"docs":"\n Immutable struct that defines which loglines are to be written,\n based on the module, the log level, and the text.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":19867,"byte_end":19879,"line_start":64,"line_end":64,"column_start":12,"column_end":24},"name":"ModuleFilter","qualname":"::log_specification::ModuleFilter","value":"ModuleFilter { module_name, level_filter }","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"decl_id":null,"docs":" Defines which loglevel filter to use for the specified module.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":19915,"byte_end":19926,"line_start":66,"line_end":66,"column_start":9,"column_end":20},"name":"module_name","qualname":"::log_specification::ModuleFilter::module_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" The module name.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":19978,"byte_end":19990,"line_start":68,"line_end":68,"column_start":9,"column_end":21},"name":"level_filter","qualname":"::log_specification::ModuleFilter::level_filter","value":"log::LevelFilter","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" The level filter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":20578,"byte_end":20585,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"enabled","qualname":"<LogSpecification>::enabled","value":"fn (&self, level: log::Level, writing_module: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if messages on the specified level from the writing module should be written\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":21251,"byte_end":21254,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"off","qualname":"<LogSpecification>::off","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LogSpecification` where all traces are switched off.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":21228,"byte_end":21239,"line_start":106,"line_end":106,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":21504,"byte_end":21509,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"name":"parse","qualname":"<LogSpecification>::parse","value":"fn (spec: &str) -> Result<Self, FlexiLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a log specification from a String.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":25247,"byte_end":25250,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"env","qualname":"<LogSpecification>::env","value":"fn () -> Result<Self, FlexiLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a log specification based on the value of the environment variable `RUST_LOG`,\n or an empty one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":25659,"byte_end":25671,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"env_or_parse","qualname":"<LogSpecification>::env_or_parse","value":"fn <S> (given_spec: S) -> Result<Self, FlexiLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a log specification based on the value of the environment variable `RUST_LOG`,\n or on the given String.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":29834,"byte_end":29841,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"default","qualname":"<LogSpecification>::default","value":"fn (level_filter: LevelFilter) -> LogSpecBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a `LogSpecBuilder`, setting the default log level.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":29811,"byte_end":29822,"line_start":353,"line_end":353,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":30089,"byte_end":30103,"line_start":362,"line_end":362,"column_start":12,"column_end":26},"name":"module_filters","qualname":"<LogSpecification>::module_filters","value":"fn (&self) -> &Vec<ModuleFilter>","parent":null,"children":[],"decl_id":null,"docs":" Provides a reference to the module filters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":30365,"byte_end":30376,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"text_filter","qualname":"<LogSpecification>::text_filter","value":"fn (&self) -> &Option<Regex>","parent":null,"children":[],"decl_id":null,"docs":" Provides a reference to the text filter.","sig":null,"attributes":[{"value":"cfg(feature = \"textfilter\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":30323,"byte_end":30353,"line_start":369,"line_end":369,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":32856,"byte_end":32870,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"LogSpecBuilder","qualname":"::log_specification::LogSpecBuilder","value":"LogSpecBuilder {  }","parent":null,"children":[{"krate":0,"index":565}],"decl_id":null,"docs":" Builder for `LogSpecification`.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":31716,"byte_end":31755,"line_start":419,"line_end":419,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":33047,"byte_end":33050,"line_start":462,"line_end":462,"column_start":12,"column_end":15},"name":"new","qualname":"<LogSpecBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `LogSpecBuilder` with all logging turned off.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":33024,"byte_end":33035,"line_start":461,"line_end":461,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":33317,"byte_end":33336,"line_start":472,"line_end":472,"column_start":12,"column_end":31},"name":"from_module_filters","qualname":"<LogSpecBuilder>::from_module_filters","value":"fn (module_filters: &[ModuleFilter]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `LogSpecBuilder` from given module filters.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":33294,"byte_end":33305,"line_start":471,"line_end":471,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":33704,"byte_end":33711,"line_start":483,"line_end":483,"column_start":12,"column_end":19},"name":"default","qualname":"<LogSpecBuilder>::default","value":"fn (&mut self, lf: LevelFilter) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a default log level filter, or updates the default log level filter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":33912,"byte_end":33918,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"module","qualname":"<LogSpecBuilder>::module","value":"fn <M> (&mut self, module_name: M, lf: LevelFilter) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a log level filter, or updates the log level filter, for a module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":34196,"byte_end":34202,"line_start":496,"line_end":496,"column_start":12,"column_end":18},"name":"remove","qualname":"<LogSpecBuilder>::remove","value":"fn <M> (&mut self, module_name: M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a log level filter, or updates the log level filter, for a module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":34453,"byte_end":34461,"line_start":504,"line_end":504,"column_start":12,"column_end":20},"name":"finalize","qualname":"<LogSpecBuilder>::finalize","value":"fn (self) -> LogSpecification","parent":null,"children":[],"decl_id":null,"docs":" Creates a log specification without text filter.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":34430,"byte_end":34441,"line_start":503,"line_end":503,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":34880,"byte_end":34904,"line_start":516,"line_end":516,"column_start":12,"column_end":36},"name":"finalize_with_textfilter","qualname":"<LogSpecBuilder>::finalize_with_textfilter","value":"fn (self, tf: Regex) -> LogSpecification","parent":null,"children":[],"decl_id":null,"docs":" Creates a log specification with text filter.","sig":null,"attributes":[{"value":"cfg(feature = \"textfilter\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":34838,"byte_end":34868,"line_start":515,"line_end":515,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":35183,"byte_end":35188,"line_start":525,"line_end":525,"column_start":12,"column_end":17},"name":"build","qualname":"<LogSpecBuilder>::build","value":"fn (&self) -> LogSpecification","parent":null,"children":[],"decl_id":null,"docs":" Creates a log specification without being consumed.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":35160,"byte_end":35171,"line_start":524,"line_end":524,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":35653,"byte_end":35674,"line_start":537,"line_end":537,"column_start":12,"column_end":33},"name":"build_with_textfilter","qualname":"<LogSpecBuilder>::build_with_textfilter","value":"fn (&self, tf: Option<Regex>) -> LogSpecification","parent":null,"children":[],"decl_id":null,"docs":" Creates a log specification without being consumed, optionally with a text filter.","sig":null,"attributes":[{"value":"cfg(feature = \"textfilter\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":35611,"byte_end":35641,"line_start":536,"line_end":536,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":48571,"byte_end":48577,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"Logger","qualname":"::logger::Logger","value":"Logger {  }","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" The entry-point for using `flexi_logger`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":49341,"byte_end":49347,"line_start":71,"line_end":71,"column_start":5,"column_end":11},"name":"StdErr","qualname":"::logger::LogTarget::StdErr","value":"LogTarget::StdErr","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Log is written to stderr.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":49387,"byte_end":49393,"line_start":73,"line_end":73,"column_start":5,"column_end":11},"name":"StdOut","qualname":"::logger::LogTarget::StdOut","value":"LogTarget::StdOut","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Log is written to stdout.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":49588,"byte_end":49592,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"File","qualname":"::logger::LogTarget::File","value":"LogTarget::File","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Log is written to a file.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":49675,"byte_end":49681,"line_start":81,"line_end":81,"column_start":5,"column_end":11},"name":"Writer","qualname":"::logger::LogTarget::Writer","value":"LogTarget::Writer(Box<dyn LogWriter>)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Log is written to an alternative `LogWriter` implementation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":49828,"byte_end":49841,"line_start":84,"line_end":84,"column_start":5,"column_end":18},"name":"FileAndWriter","qualname":"::logger::LogTarget::FileAndWriter","value":"LogTarget::FileAndWriter(Box<dyn LogWriter>)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Log is written to a file, as with `LogTarget::File`, _and_ to an alternative\n `LogWriter` implementation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":50244,"byte_end":50251,"line_start":90,"line_end":90,"column_start":5,"column_end":12},"name":"DevNull","qualname":"::logger::LogTarget::DevNull","value":"LogTarget::DevNull","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Log is processed as if it were written, but is finally not written.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":49227,"byte_end":49236,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"LogTarget","qualname":"::logger::LogTarget","value":"LogTarget::{StdErr, StdOut, File, Writer, FileAndWriter, DevNull}","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143}],"decl_id":null,"docs":" Describes the default log target.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":50544,"byte_end":50548,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"with","qualname":"<Logger>::with","value":"fn (logspec: LogSpecification) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Logger that you provide with an explicit `LogSpecification`.\n By default, logs are written with `default_format` to `stderr`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":50521,"byte_end":50532,"line_start":98,"line_end":98,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":50829,"byte_end":50837,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"with_str","qualname":"<Logger>::with_str","value":"fn <S> (s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Logger that reads the `LogSpecification` from a String or &str.\n [See `LogSpecification`](struct.LogSpecification.html) for the syntax.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":50806,"byte_end":50817,"line_start":105,"line_end":105,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":51067,"byte_end":51075,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"with_env","qualname":"<Logger>::with_env","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Logger that reads the `LogSpecification` from the environment variable `RUST_LOG`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":51044,"byte_end":51055,"line_start":111,"line_end":111,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":51345,"byte_end":51360,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"with_env_or_str","qualname":"<Logger>::with_env_or_str","value":"fn <S> (s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Logger that reads the `LogSpecification` from the environment variable `RUST_LOG`,\n or derives it from the given String, if `RUST_LOG` is not set.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":51322,"byte_end":51333,"line_start":118,"line_end":118,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":53746,"byte_end":53764,"line_start":180,"line_end":180,"column_start":12,"column_end":30},"name":"check_parser_error","qualname":"<Logger>::check_parser_error","value":"fn (self) -> Result<Self, FlexiLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Allows verifying that no parsing errors have occured in the used factory method,\n and examining the parse error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":54137,"byte_end":54148,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"log_to_file","qualname":"<Logger>::log_to_file","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Is equivalent to\n [`log_target`](struct.Logger.html#method.log_target)`(`[`LogTarget::File`](\n enum.LogTarget.html#variant.File)`)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":54403,"byte_end":54413,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"log_target","qualname":"<Logger>::log_target","value":"fn (mut self, log_target: LogTarget) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Write the main log output to the specified target.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":55008,"byte_end":55018,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"do_not_log","qualname":"<Logger>::do_not_log","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger write no logs at all.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":55248,"byte_end":55261,"line_start":217,"line_end":217,"column_start":12,"column_end":25},"name":"print_message","qualname":"<Logger>::print_message","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger print an info message to stdout with the name of the logfile\n when a logfile is opened for writing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":55460,"byte_end":55479,"line_start":223,"line_end":223,"column_start":12,"column_end":31},"name":"duplicate_to_stderr","qualname":"<Logger>::duplicate_to_stderr","value":"fn (mut self, dup: Duplicate) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger write messages with the specified minimum severity additionally to stderr.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":56191,"byte_end":56197,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"format","qualname":"<Logger>::format","value":"fn (mut self, format: FormatFunction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger use the provided format function for all messages\n that are written to files or to stderr or to an additional writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":56597,"byte_end":56613,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"format_for_files","qualname":"<Logger>::format_for_files","value":"fn (mut self, format: FormatFunction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger use the provided format function for messages\n that are written to files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":56945,"byte_end":56962,"line_start":261,"line_end":261,"column_start":12,"column_end":29},"name":"format_for_stderr","qualname":"<Logger>::format_for_stderr","value":"fn (mut self, format: FormatFunction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger use the provided format function for messages\n that are written to stderr or to stdout.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":57370,"byte_end":57387,"line_start":271,"line_end":271,"column_start":12,"column_end":29},"name":"format_for_writer","qualname":"<Logger>::format_for_writer","value":"fn (mut self, format: FormatFunction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows specifying a format function for an additional writer.\n Note that it is up to the implementation of the additional writer\n whether it evaluates this setting or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":57802,"byte_end":57811,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"directory","qualname":"<Logger>::directory","value":"fn <S> (mut self, directory: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a folder for the log files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":58076,"byte_end":58082,"line_start":289,"line_end":289,"column_start":12,"column_end":18},"name":"suffix","qualname":"<Logger>::suffix","value":"fn <S> (mut self, suffix: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a suffix for the log files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":58370,"byte_end":58388,"line_start":297,"line_end":297,"column_start":12,"column_end":30},"name":"suppress_timestamp","qualname":"<Logger>::suppress_timestamp","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger not include a timestamp into the names of the log files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":59238,"byte_end":59266,"line_start":315,"line_end":315,"column_start":12,"column_end":40},"name":"cleanup_in_background_thread","qualname":"<Logger>::cleanup_in_background_thread","value":"fn (mut self, use_background_thread: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When rotation is used with some `Cleanup` variant, then this option defines\n if the cleanup activities (finding files, deleting files, evtl zipping files) is done in\n the current thread (in the current log-call), or whether cleanup is delegated to a\n background thread.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":59215,"byte_end":59226,"line_start":314,"line_end":314,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":60869,"byte_end":60875,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Logger>::rotate","value":"fn (mut self, criterion: Criterion, naming: Naming, cleanup: Cleanup) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prevent indefinite growth of the log file by applying file rotation\n and a clean-up strategy for older log files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":61348,"byte_end":61354,"line_start":366,"line_end":366,"column_start":12,"column_end":18},"name":"append","qualname":"<Logger>::append","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger append to the specified output file, if it exists already;\n by default, the file would be truncated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":61609,"byte_end":61621,"line_start":374,"line_end":374,"column_start":12,"column_end":24},"name":"discriminant","qualname":"<Logger>::discriminant","value":"fn <S> (mut self, discriminant: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The specified String is added to the log file name after the program name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":62391,"byte_end":62405,"line_start":396,"line_end":396,"column_start":12,"column_end":26},"name":"create_symlink","qualname":"<Logger>::create_symlink","value":"fn <P> (mut self, symlink: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The specified path will be used on linux systems to create a symbolic link\n to the current log file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":62766,"byte_end":62776,"line_start":406,"line_end":406,"column_start":12,"column_end":22},"name":"add_writer","qualname":"<Logger>::add_writer","value":"fn <S> (mut self, target_name: S, writer: Box<dyn LogWriter>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers a `LogWriter` implementation under the given target name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":63040,"byte_end":63063,"line_start":416,"line_end":416,"column_start":12,"column_end":35},"name":"use_windows_line_ending","qualname":"<Logger>::use_windows_line_ending","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use Windows line endings, rather than just `\\n`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":63550,"byte_end":63563,"line_start":428,"line_end":428,"column_start":12,"column_end":25},"name":"o_log_to_file","qualname":"<Logger>::o_log_to_file","value":"fn (mut self, log_to_file: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" With true, makes the logger write all logs to a file, otherwise to stderr.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.13.3\", note = \"please use `log_target` instead\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":63465,"byte_end":63538,"line_start":427,"line_end":427,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":63909,"byte_end":63924,"line_start":439,"line_end":439,"column_start":12,"column_end":27},"name":"o_print_message","qualname":"<Logger>::o_print_message","value":"fn (mut self, print_message: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" With true, makes the logger print an info message to stdout, each time\n when a new file is used for log-output.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":64356,"byte_end":64367,"line_start":449,"line_end":449,"column_start":12,"column_end":23},"name":"o_directory","qualname":"<Logger>::o_directory","value":"fn <P> (mut self, directory: Option<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a folder for the log files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":65086,"byte_end":65094,"line_start":464,"line_end":464,"column_start":12,"column_end":20},"name":"o_rotate","qualname":"<Logger>::o_rotate","value":"fn (mut self, rotate_config: Option<(Criterion, Naming, Cleanup)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" By default, and with None, the log file will grow indefinitely.\n If a `rotate_config` is set, when the log file reaches or exceeds the specified size,\n the file will be closed and a new file will be opened.\n Also the filename pattern changes: instead of the timestamp, a serial number\n is included into the filename.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":65557,"byte_end":65568,"line_start":474,"line_end":474,"column_start":12,"column_end":23},"name":"o_timestamp","qualname":"<Logger>::o_timestamp","value":"fn (mut self, timestamp: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" With true, makes the logger include a timestamp into the names of the log files.\n `true` is the default, but `rotate_over_size` sets it to `false`.\n With this method you can set it to `true` again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":66032,"byte_end":66040,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"o_append","qualname":"<Logger>::o_append","value":"fn (mut self, append: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This option only has an effect if `log_to_file` is set to true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":66294,"byte_end":66308,"line_start":494,"line_end":494,"column_start":12,"column_end":26},"name":"o_discriminant","qualname":"<Logger>::o_discriminant","value":"fn <S> (mut self, discriminant: Option<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This option only has an effect if `log_to_file` is set to true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":66705,"byte_end":66721,"line_start":503,"line_end":503,"column_start":12,"column_end":28},"name":"o_create_symlink","qualname":"<Logger>::o_create_symlink","value":"fn <P> (mut self, symlink: Option<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This option only has an effect if `log_to_file` is set to true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":67383,"byte_end":67388,"line_start":520,"line_end":520,"column_start":12,"column_end":17},"name":"start","qualname":"<Logger>::start","value":"fn (mut self) -> Result<ReconfigurationHandle, FlexiLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the Logger object and initializes `flexi_logger`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":76822,"byte_end":76826,"line_start":749,"line_end":749,"column_start":5,"column_end":9},"name":"Size","qualname":"::logger::Criterion::Size","value":"Criterion::Size(u64)","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Rotate the log file when it exceeds the specified size in bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":78912,"byte_end":78915,"line_start":792,"line_end":792,"column_start":5,"column_end":8},"name":"Age","qualname":"::logger::Criterion::Age","value":"Criterion::Age(Age)","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Rotate the log file when it has become older than the specified age.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":76733,"byte_end":76742,"line_start":747,"line_end":747,"column_start":10,"column_end":19},"name":"Criterion","qualname":"::logger::Criterion","value":"Criterion::{Size, Age}","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":198}],"decl_id":null,"docs":" Criterion when to rotate the log file.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":79222,"byte_end":79225,"line_start":801,"line_end":801,"column_start":5,"column_end":8},"name":"Day","qualname":"::logger::Age::Day","value":"Age::Day","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Rotate the log file when the local clock has started a new day since the\n current file had been created.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":79352,"byte_end":79356,"line_start":804,"line_end":804,"column_start":5,"column_end":9},"name":"Hour","qualname":"::logger::Age::Hour","value":"Age::Hour","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Rotate the log file when the local clock has started a new hour since the\n current file had been created.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":79485,"byte_end":79491,"line_start":807,"line_end":807,"column_start":5,"column_end":11},"name":"Minute","qualname":"::logger::Age::Minute","value":"Age::Minute","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Rotate the log file when the local clock has started a new minute since the\n current file had been created.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":79620,"byte_end":79626,"line_start":810,"line_end":810,"column_start":5,"column_end":11},"name":"Second","qualname":"::logger::Age::Second","value":"Age::Second","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Rotate the log file when the local clock has started a new second since the\n current file had been created.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":79092,"byte_end":79095,"line_start":798,"line_end":798,"column_start":10,"column_end":13},"name":"Age","qualname":"::logger::Age","value":"Age::{Day, Hour, Minute, Second}","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579}],"decl_id":null,"docs":" The age after which a log file rotation will be triggered,\n when [`Criterion::Age`](enum.Criterion.html#variant.Age) is chosen.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":80141,"byte_end":80151,"line_start":823,"line_end":823,"column_start":5,"column_end":15},"name":"Timestamps","qualname":"::logger::Naming::Timestamps","value":"Naming::Timestamps","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" File rotation rotates to files with a timestamp-infix, like `\"r2020-01-27_14-41-08\"`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":80217,"byte_end":80224,"line_start":825,"line_end":825,"column_start":5,"column_end":12},"name":"Numbers","qualname":"::logger::Naming::Numbers","value":"Naming::Numbers","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" File rotation rotates to files with a number-infix.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":80034,"byte_end":80040,"line_start":821,"line_end":821,"column_start":10,"column_end":16},"name":"Naming","qualname":"::logger::Naming","value":"Naming::{Timestamps, Numbers}","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":587}],"decl_id":null,"docs":" The naming convention for rotated log files.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":80823,"byte_end":80828,"line_start":840,"line_end":840,"column_start":5,"column_end":10},"name":"Never","qualname":"::logger::Cleanup::Never","value":"Cleanup::Never","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" Older log files are not touched - they remain for ever.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":80941,"byte_end":80953,"line_start":843,"line_end":843,"column_start":5,"column_end":17},"name":"KeepLogFiles","qualname":"::logger::Cleanup::KeepLogFiles","value":"Cleanup::KeepLogFiles(usize)","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":" The specified number of rotated log files are kept.\n Older files are deleted, if necessary.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":80745,"byte_end":80752,"line_start":838,"line_end":838,"column_start":10,"column_end":17},"name":"Cleanup","qualname":"::logger::Cleanup","value":"Cleanup::{Never, KeepLogFiles}","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":595}],"decl_id":null,"docs":" Defines the strategy for handling older log files.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":82054,"byte_end":82058,"line_start":878,"line_end":878,"column_start":5,"column_end":9},"name":"None","qualname":"::logger::Duplicate::None","value":"Duplicate::None","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" No messages are duplicated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":82108,"byte_end":82113,"line_start":880,"line_end":880,"column_start":5,"column_end":10},"name":"Error","qualname":"::logger::Duplicate::Error","value":"Duplicate::Error","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Only error messages are duplicated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":82167,"byte_end":82171,"line_start":882,"line_end":882,"column_start":5,"column_end":9},"name":"Warn","qualname":"::logger::Duplicate::Warn","value":"Duplicate::Warn","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Error and warn messages are duplicated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":82232,"byte_end":82236,"line_start":884,"line_end":884,"column_start":5,"column_end":9},"name":"Info","qualname":"::logger::Duplicate::Info","value":"Duplicate::Info","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Error, warn, and info messages are duplicated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":82304,"byte_end":82309,"line_start":886,"line_end":886,"column_start":5,"column_end":10},"name":"Debug","qualname":"::logger::Duplicate::Debug","value":"Duplicate::Debug","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Error, warn, info, and debug messages are duplicated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":82352,"byte_end":82357,"line_start":888,"line_end":888,"column_start":5,"column_end":10},"name":"Trace","qualname":"::logger::Duplicate::Trace","value":"Duplicate::Trace","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" All messages are duplicated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":82400,"byte_end":82403,"line_start":890,"line_end":890,"column_start":5,"column_end":8},"name":"All","qualname":"::logger::Duplicate::All","value":"Duplicate::All","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" All messages are duplicated.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":82002,"byte_end":82011,"line_start":876,"line_end":876,"column_start":10,"column_end":19},"name":"Duplicate","qualname":"::logger::Duplicate","value":"Duplicate::{None, Error, Warn, Info, Debug, Trace, All}","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614}],"decl_id":null,"docs":" Used to control which messages are to be duplicated to stderr, when `log_to_file()` is used.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":91876,"byte_end":91897,"line_start":54,"line_end":54,"column_start":12,"column_end":33},"name":"ReconfigurationHandle","qualname":"::reconfiguration_handle::ReconfigurationHandle","value":"ReconfigurationHandle {  }","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"decl_id":null,"docs":" Allows reconfiguring the logger programmatically.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":92913,"byte_end":92925,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"set_new_spec","qualname":"<ReconfigurationHandle>::set_new_spec","value":"fn (&mut self, new_spec: LogSpecification) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the active `LogSpecification`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":93257,"byte_end":93271,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"parse_new_spec","qualname":"<ReconfigurationHandle>::parse_new_spec","value":"fn (&mut self, spec: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Tries to replace the active `LogSpecification` with the result from parsing the given String.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":93673,"byte_end":93687,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"push_temp_spec","qualname":"<ReconfigurationHandle>::push_temp_spec","value":"fn (&mut self, new_spec: LogSpecification) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the active `LogSpecification` and pushes the previous one to a Stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":94041,"byte_end":94065,"line_start":114,"line_end":114,"column_start":12,"column_end":36},"name":"parse_and_push_temp_spec","qualname":"<ReconfigurationHandle>::parse_and_push_temp_spec","value":"fn (&mut self, new_spec: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Tries to replace the active `LogSpecification` with the result from parsing the given String\n  and pushes the previous one to a Stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":94607,"byte_end":94620,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"pop_temp_spec","qualname":"<ReconfigurationHandle>::pop_temp_spec","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reverts to the previous `LogSpecification`, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":95418,"byte_end":95426,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<ReconfigurationHandle>::shutdown","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shutdown all participating writers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":95744,"byte_end":95757,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"validate_logs","qualname":"<ReconfigurationHandle>::validate_logs","value":"fn (&self, expected: &[(&'static str, &'static str, &'static str)]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writers","qualname":"::writers","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers.rs","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":465},{"krate":0,"index":476},{"krate":0,"index":479}],"decl_id":null,"docs":" Contains a trait ([`LogWriter`](trait.LogWriter.html)) for extending `flexi_logger`\n with additional log writers,\n and two concrete implementations\n for writing to files\n ([`FileLogWriter`](struct.FileLogWriter.html))\n or to the syslog\n ([`SyslogWriter`](struct.SyslogWriter.html)).\n You can also use your own implementations of [`LogWriter`](trait.LogWriter.html).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":101990,"byte_end":102010,"line_start":72,"line_end":72,"column_start":12,"column_end":32},"name":"FileLogWriterBuilder","qualname":"::writers::file_log_writer::FileLogWriterBuilder","value":"FileLogWriterBuilder {  }","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"decl_id":null,"docs":" Builder for `FileLogWriter`.\n","sig":null,"attributes":[{"value":"allow(clippy :: module_name_repetitions)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":101937,"byte_end":101978,"line_start":71,"line_end":71,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":102448,"byte_end":102461,"line_start":85,"line_end":85,"column_start":12,"column_end":25},"name":"print_message","qualname":"<FileLogWriterBuilder>::print_message","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the `FileLogWriter` print an info message to stdout\n when a new file is used for log-output.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":102425,"byte_end":102436,"line_start":84,"line_end":84,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":102730,"byte_end":102736,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<FileLogWriterBuilder>::format","value":"fn (mut self, format: FormatFunction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the `FileLogWriter` use the provided format function for the log entries,\n rather than the default ([`formats::default_format`](fn.default_format.html)).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":103072,"byte_end":103081,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"directory","qualname":"<FileLogWriterBuilder>::directory","value":"fn <P> (mut self, directory: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a folder for the log files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":103299,"byte_end":103305,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"suffix","qualname":"<FileLogWriterBuilder>::suffix","value":"fn <S> (mut self, suffix: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a suffix for the log files. The default is \"log\".\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":103542,"byte_end":103560,"line_start":114,"line_end":114,"column_start":12,"column_end":30},"name":"suppress_timestamp","qualname":"<FileLogWriterBuilder>::suppress_timestamp","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger not include a timestamp into the names of the log files\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":103519,"byte_end":103530,"line_start":113,"line_end":113,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":104417,"byte_end":104445,"line_start":132,"line_end":132,"column_start":12,"column_end":40},"name":"cleanup_in_background_thread","qualname":"<FileLogWriterBuilder>::cleanup_in_background_thread","value":"fn (mut self, use_background_thread: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When rotation is used with some `Cleanup` variant, then this option defines\n if the cleanup activities (finding files, deleting files, evtl zipping files) is done in\n the current thread (in the current log-call), or whether cleanup is delegated to a\n background thread.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":104394,"byte_end":104405,"line_start":131,"line_end":131,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":105810,"byte_end":105816,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"rotate","qualname":"<FileLogWriterBuilder>::rotate","value":"fn (mut self, criterion: Criterion, naming: Naming, cleanup: Cleanup) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use rotation to prevent indefinite growth of log files.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":105787,"byte_end":105798,"line_start":165,"line_end":165,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":106244,"byte_end":106250,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"append","qualname":"<FileLogWriterBuilder>::append","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes the logger append to the given file, if it exists; by default, the file would be\n truncated.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":106221,"byte_end":106232,"line_start":178,"line_end":178,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":106397,"byte_end":106409,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"discriminant","qualname":"<FileLogWriterBuilder>::discriminant","value":"fn <S> (mut self, discriminant: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The specified String is added to the log file name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":106690,"byte_end":106704,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"create_symlink","qualname":"<FileLogWriterBuilder>::create_symlink","value":"fn <P> (mut self, symlink: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The specified String will be used on linux systems to create in the current folder\n a symbolic link to the current log file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":106920,"byte_end":106943,"line_start":199,"line_end":199,"column_start":12,"column_end":35},"name":"use_windows_line_ending","qualname":"<FileLogWriterBuilder>::use_windows_line_ending","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use Windows line endings, rather than just `\\n`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":106897,"byte_end":106908,"line_start":198,"line_end":198,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":107150,"byte_end":107159,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"try_build","qualname":"<FileLogWriterBuilder>::try_build","value":"fn (mut self) -> Result<FileLogWriter, FlexiLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Produces the `FileLogWriter`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":108847,"byte_end":108862,"line_start":250,"line_end":250,"column_start":12,"column_end":27},"name":"o_print_message","qualname":"<FileLogWriterBuilder>::o_print_message","value":"fn (mut self, print_message: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" With true, makes the `FileLogWriterBuilder` print an info message to stdout, each time\n when a new file is used for log-output.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":108824,"byte_end":108835,"line_start":249,"line_end":249,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":109208,"byte_end":109219,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"o_directory","qualname":"<FileLogWriterBuilder>::o_directory","value":"fn <P> (mut self, directory: Option<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a folder for the log files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":109558,"byte_end":109569,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"o_timestamp","qualname":"<FileLogWriterBuilder>::o_timestamp","value":"fn (mut self, use_timestamp: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" With true, makes the `FileLogWriterBuilder` include a timestamp into the names of the\n log files.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":109535,"byte_end":109546,"line_start":267,"line_end":267,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":110298,"byte_end":110306,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"o_rotate","qualname":"<FileLogWriterBuilder>::o_rotate","value":"fn (mut self, rotate_config: Option<(Criterion, Naming, Cleanup)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" By default, and with None, the log file will grow indefinitely.\n If a `rotate_config` is set, when the log file reaches or exceeds the specified size,\n the file will be closed and a new file will be opened.\n Also the filename pattern changes: instead of the timestamp, a serial number\n is included into the filename.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":110275,"byte_end":110286,"line_start":283,"line_end":283,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":110996,"byte_end":111004,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"o_append","qualname":"<FileLogWriterBuilder>::o_append","value":"fn (mut self, append: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If append is set to true, makes the logger append to the given file, if it exists.\n By default, or with false, the file would be truncated.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":110973,"byte_end":110984,"line_start":301,"line_end":301,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":111167,"byte_end":111181,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"o_discriminant","qualname":"<FileLogWriterBuilder>::o_discriminant","value":"fn <S> (mut self, discriminant: Option<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The specified String is added to the log file name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":111496,"byte_end":111512,"line_start":315,"line_end":315,"column_start":12,"column_end":28},"name":"o_create_symlink","qualname":"<FileLogWriterBuilder>::o_create_symlink","value":"fn <S> (mut self, symlink: Option<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If a String is specified, it will be used on linux systems to create in the current folder\n a symbolic link with this name to the current log file.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":130996,"byte_end":131009,"line_start":842,"line_end":842,"column_start":12,"column_end":25},"name":"FileLogWriter","qualname":"::writers::file_log_writer::FileLogWriter","value":"FileLogWriter {  }","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"decl_id":null,"docs":" A configurable `LogWriter` implementation that writes to a file or a sequence of files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":131426,"byte_end":131433,"line_start":853,"line_end":853,"column_start":12,"column_end":19},"name":"builder","qualname":"<FileLogWriter>::builder","value":"fn () -> FileLogWriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a builder for `FileLogWriter`.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":131403,"byte_end":131414,"line_start":852,"line_end":852,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":131826,"byte_end":131832,"line_start":865,"line_end":865,"column_start":12,"column_end":18},"name":"format","qualname":"<FileLogWriter>::format","value":"fn (&self) -> FormatFunction","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to its configured output format function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":131805,"byte_end":131814,"line_start":864,"line_end":864,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":131924,"byte_end":131940,"line_start":870,"line_end":870,"column_start":12,"column_end":28},"name":"current_filename","qualname":"<FileLogWriter>::current_filename","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":149488,"byte_end":149497,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"LogWriter","qualname":"::writers::log_writer::LogWriter","value":"LogWriter: Sync + Send","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"decl_id":null,"docs":" Writes to a single log output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":149609,"byte_end":149614,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"write","qualname":"::writers::log_writer::LogWriter::write","value":"fn (&self, now: &mut DeferredNow, record: &Record) -> std::io::Result<()>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Writes out a log line.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":149790,"byte_end":149795,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"flush","qualname":"::writers::log_writer::LogWriter::flush","value":"fn (&self) -> std::io::Result<()>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Flushes any buffered records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":149897,"byte_end":149910,"line_start":25,"line_end":25,"column_start":8,"column_end":21},"name":"max_log_level","qualname":"::writers::log_writer::LogWriter::max_log_level","value":"fn (&self) -> log::LevelFilter","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Provides the maximum log level that is to be written.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":150237,"byte_end":150243,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"format","qualname":"::writers::log_writer::LogWriter::format","value":"fn (&mut self, format: FormatFunction) -> ()","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Sets the format function.\n Defaults to ([`formats::default_format`](fn.default_format.html)),\n but can be changed with a call to\n [`Logger::format_for_writer`](struct.Logger.html#method.format_for_writer).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":150365,"byte_end":150373,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"shutdown","qualname":"::writers::log_writer::LogWriter::shutdown","value":"fn (&self) -> ()","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Cleanup open resources, if necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":150669,"byte_end":150682,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"validate_logs","qualname":"::writers::log_writer::LogWriter::validate_logs","value":"fn (&self, _expected: &[(&'static str, &'static str, &'static str)]) -> ()","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Takes a vec with three patterns per line that represent the log out,\n compares the written log with the expected lines,\n and asserts that both are in sync.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":2805,"byte_end":2819,"line_start":75,"line_end":75,"column_start":10,"column_end":24},"name":"FormatFunction","qualname":"::FormatFunction","value":"fn(write: &mut dyn std::io::Write, now: &mut DeferredNow, record: &Record)\n    -> Result<(), std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Function type for Format functions.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","byte_start":3226,"byte_end":3237,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","byte_start":6520,"byte_end":6531,"line_start":23,"line_end":23,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","byte_start":7125,"byte_end":7136,"line_start":43,"line_end":43,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":20013,"byte_end":20029,"line_start":71,"line_end":71,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":32939,"byte_end":32953,"line_start":459,"line_end":459,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":35996,"byte_end":36003,"line_start":548,"line_end":548,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":36423,"byte_end":36426,"line_start":564,"line_end":564,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":50357,"byte_end":50363,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":52675,"byte_end":52681,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":63369,"byte_end":63375,"line_start":425,"line_end":425,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":66921,"byte_end":66927,"line_start":510,"line_end":510,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":81659,"byte_end":81666,"line_start":863,"line_end":863,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":82940,"byte_end":82953,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":84652,"byte_end":84664,"line_start":76,"line_end":76,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":85133,"byte_end":85145,"line_start":96,"line_end":96,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":85690,"byte_end":85705,"line_start":116,"line_end":116,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":86748,"byte_end":86759,"line_start":145,"line_end":145,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":92088,"byte_end":92109,"line_start":60,"line_end":60,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":101349,"byte_end":101368,"line_start":51,"line_end":51,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":102284,"byte_end":102304,"line_start":81,"line_end":81,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":108654,"byte_end":108674,"line_start":246,"line_end":246,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":112617,"byte_end":112630,"line_start":358,"line_end":358,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":114072,"byte_end":114090,"line_start":393,"line_end":393,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":131331,"byte_end":131344,"line_start":850,"line_end":850,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":132301,"byte_end":132314,"line_start":887,"line_end":887,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\lib.rs","byte_start":1567,"byte_end":1574,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":295}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\deferred_now.rs","byte_start":3226,"byte_end":3237,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","byte_start":6520,"byte_end":6531,"line_start":23,"line_end":23,"column_start":6,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":25},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\flexi_logger.rs","byte_start":7125,"byte_end":7136,"line_start":43,"line_end":43,"column_start":19,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":25},"to":{"krate":19,"index":145}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":20013,"byte_end":20029,"line_start":71,"line_end":71,"column_start":6,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":32939,"byte_end":32953,"line_start":459,"line_end":459,"column_start":6,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":35996,"byte_end":36003,"line_start":548,"line_end":548,"column_start":30,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":1,"index":6110},"to":{"krate":0,"index":92}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\log_specification.rs","byte_start":36423,"byte_end":36426,"line_start":564,"line_end":564,"column_start":20,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":97}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":50357,"byte_end":50363,"line_start":95,"line_end":95,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":52675,"byte_end":52681,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":63369,"byte_end":63375,"line_start":425,"line_end":425,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":66921,"byte_end":66927,"line_start":510,"line_end":510,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\logger.rs","byte_start":81659,"byte_end":81666,"line_start":863,"line_end":863,"column_start":6,"column_end":13},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":82940,"byte_end":82953,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":84652,"byte_end":84664,"line_start":76,"line_end":76,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":85133,"byte_end":85145,"line_start":96,"line_end":96,"column_start":6,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":85690,"byte_end":85705,"line_start":116,"line_end":116,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\primary_writer.rs","byte_start":86748,"byte_end":86759,"line_start":145,"line_end":145,"column_start":20,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":250},"to":{"krate":0,"index":469}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\reconfiguration_handle.rs","byte_start":92088,"byte_end":92109,"line_start":60,"line_end":60,"column_start":6,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":101349,"byte_end":101368,"line_start":51,"line_end":51,"column_start":6,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":102284,"byte_end":102304,"line_start":81,"line_end":81,"column_start":6,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":108654,"byte_end":108674,"line_start":246,"line_end":246,"column_start":6,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":112617,"byte_end":112630,"line_start":358,"line_end":358,"column_start":6,"column_end":19},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":114072,"byte_end":114090,"line_start":393,"line_end":393,"column_start":6,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":131331,"byte_end":131344,"line_start":850,"line_end":850,"column_start":6,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\file_log_writer.rs","byte_start":132301,"byte_end":132314,"line_start":887,"line_end":887,"column_start":20,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":433},"to":{"krate":0,"index":469}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":149499,"byte_end":149503,"line_start":9,"line_end":9,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1545},"to":{"krate":0,"index":469}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\flexi_logger-0.15.2\\src\\writers\\log_writer.rs","byte_start":149506,"byte_end":149510,"line_start":9,"line_end":9,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":469}}]}