{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4","program":"C:\\Users\\Spencer Du\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","image","C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"dds\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"farbfeld\"","--cfg","feature=\"gif\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=efa82149da8cbced","-C","extra-filename=-efa82149da8cbced","--out-dir","c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps","--extern","bytemuck=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libbytemuck-8a98ce3020c9481c.rmeta","--extern","byteorder=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libbyteorder-11cef1219be0d381.rmeta","--extern","gif=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libgif-1b29e8aed6ac1b80.rmeta","--extern","jpeg=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libjpeg_decoder-9a6cba042a9247ba.rmeta","--extern","num_iter=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libnum_iter-3828ca4b0c031dbb.rmeta","--extern","num_rational=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libnum_rational-d05115e348a025f9.rmeta","--extern","num_traits=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libnum_traits-06e054c4c95d48c0.rmeta","--extern","png=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libpng-b29fe762e53416ae.rmeta","--extern","scoped_threadpool=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libscoped_threadpool-63142f327923c2a5.rmeta","--extern","tiff=c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libtiff-34df865c894a2498.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Spencer Du\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Spencer Du\\Documents\\MSc Computing with placement Cardiff Uni\\Placement\\SLM-control\\Rust\\assignment\\target\\rls\\debug\\deps\\libimage-efa82149da8cbced.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[16589641409480187034,5370595424555270194]},"crate_root":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src","external_crates":[{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","num":14,"id":{"name":"tiff","disambiguator":[4146004518891542073,12727959858404719391]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","num":15,"id":{"name":"byteorder","disambiguator":[571040840798828509,11112181538235283130]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","num":16,"id":{"name":"lzw","disambiguator":[15099569162670075523,3508576874480256305]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[14356242371098146446,3035140498159121533]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","num":18,"id":{"name":"adler32","disambiguator":[5470020609090045846,14440380773254217963]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","num":19,"id":{"name":"num_traits","disambiguator":[9658936450980938914,14161967064833628679]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","num":20,"id":{"name":"gif","disambiguator":[18371189255484967979,1430782751927475450]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","num":21,"id":{"name":"color_quant","disambiguator":[8792847916174623078,12727662811981802366]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","num":22,"id":{"name":"num_rational","disambiguator":[2479010677682372985,8175202188124942258]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","num":23,"id":{"name":"num_integer","disambiguator":[16319462141834495537,14217651545691424615]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","num":24,"id":{"name":"scoped_threadpool","disambiguator":[12227732078255201469,11892291954216688614]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":25,"id":{"name":"jpeg_decoder","disambiguator":[11694477965830856116,11410427413768136430]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":26,"id":{"name":"rayon","disambiguator":[15293716093101491802,4978198279184144062]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":27,"id":{"name":"either","disambiguator":[14842124787982225316,7889201166325840492]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":28,"id":{"name":"crossbeam_deque","disambiguator":[10394813109180980152,11922007988729110485]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":29,"id":{"name":"crossbeam_epoch","disambiguator":[17940935686178774726,3433802885056944794]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":30,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":31,"id":{"name":"maybe_uninit","disambiguator":[4286604793989925036,16418824572312769135]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":32,"id":{"name":"crossbeam_utils","disambiguator":[241733757360262237,3759549826449363168]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":33,"id":{"name":"lazy_static","disambiguator":[17281579441627161632,7326486140096487162]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":34,"id":{"name":"memoffset","disambiguator":[6922202341888523522,14364689390498095437]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":35,"id":{"name":"scopeguard","disambiguator":[13721324641233349733,16254448533605510378]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":36,"id":{"name":"rayon_core","disambiguator":[16000443153384812065,11507542591755583321]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":37,"id":{"name":"crossbeam_queue","disambiguator":[9897166039868279079,1782825509649831016]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","num":38,"id":{"name":"num_cpus","disambiguator":[10398188043532620379,6210233894897417992]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","num":39,"id":{"name":"num_iter","disambiguator":[11052937754083819580,18335478060350877032]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","num":40,"id":{"name":"png","disambiguator":[2956467623116902847,15304462878292317095]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","num":41,"id":{"name":"bitflags","disambiguator":[1258995681021104935,10120995213895226001]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","num":42,"id":{"name":"deflate","disambiguator":[3085427910298699885,9153247031951415159]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","num":43,"id":{"name":"crc32fast","disambiguator":[14984425738714601369,14028776434072473916]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","num":44,"id":{"name":"inflate","disambiguator":[6088455039282492040,13490784073788723862]}},{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","num":45,"id":{"name":"bytemuck","disambiguator":[17048455220154329934,12776922819649006183]}}],"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":0,"byte_end":8716,"line_start":1,"line_end":252,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5058},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5614,"byte_end":5623,"line_start":117,"line_end":117,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5097},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5625,"byte_end":5642,"line_start":117,"line_end":117,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5521},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5669,"byte_end":5673,"line_start":119,"line_end":119,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5608},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5675,"byte_end":5680,"line_start":119,"line_end":119,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5463},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5682,"byte_end":5685,"line_start":119,"line_end":119,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5550},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5687,"byte_end":5691,"line_start":119,"line_end":119,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5492},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5693,"byte_end":5696,"line_start":119,"line_end":119,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5579},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5698,"byte_end":5702,"line_start":119,"line_end":119,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5729,"byte_end":5739,"line_start":121,"line_end":121,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5741,"byte_end":5752,"line_start":121,"line_end":121,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5779,"byte_end":5795,"line_start":123,"line_end":123,"column_start":24,"column_end":40},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5813,"byte_end":5825,"line_start":124,"line_end":124,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3549},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5843,"byte_end":5859,"line_start":125,"line_end":125,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3512},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5877,"byte_end":5889,"line_start":126,"line_end":126,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5907,"byte_end":5922,"line_start":127,"line_end":127,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5940,"byte_end":5952,"line_start":128,"line_end":128,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5970,"byte_end":5981,"line_start":129,"line_end":129,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5764},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5999,"byte_end":6016,"line_start":130,"line_end":130,"column_start":17,"column_end":34},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5798},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6034,"byte_end":6042,"line_start":131,"line_end":131,"column_start":17,"column_end":25},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3536},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6089,"byte_end":6095,"line_start":133,"line_end":133,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3574},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6113,"byte_end":6121,"line_start":134,"line_end":134,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6168,"byte_end":6182,"line_start":137,"line_end":137,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6201,"byte_end":6210,"line_start":138,"line_end":138,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5047},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6261,"byte_end":6272,"line_start":140,"line_end":140,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6291,"byte_end":6299,"line_start":141,"line_end":141,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6318,"byte_end":6327,"line_start":142,"line_end":142,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3903},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6352,"byte_end":6363,"line_start":144,"line_end":144,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6400,"byte_end":6409,"line_start":147,"line_end":147,"column_start":25,"column_end":34},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6411,"byte_end":6416,"line_start":147,"line_end":147,"column_start":36,"column_end":41},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6486,"byte_end":6498,"line_start":150,"line_end":150,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6500,"byte_end":6504,"line_start":150,"line_end":150,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6533,"byte_end":6549,"line_start":151,"line_end":151,"column_start":27,"column_end":43},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6551,"byte_end":6579,"line_start":151,"line_end":151,"column_start":45,"column_end":73},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6581,"byte_end":6585,"line_start":151,"line_end":151,"column_start":75,"column_end":79},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6606,"byte_end":6617,"line_start":152,"line_end":152,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3452},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6619,"byte_end":6642,"line_start":152,"line_end":152,"column_start":33,"column_end":56},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6644,"byte_end":6660,"line_start":152,"line_end":152,"column_start":58,"column_end":74},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6689,"byte_end":6701,"line_start":154,"line_end":154,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6731,"byte_end":6736,"line_start":156,"line_end":156,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5020},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6738,"byte_end":6743,"line_start":156,"line_end":156,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6745,"byte_end":6751,"line_start":156,"line_end":156,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6974,"byte_end":6987,"line_start":165,"line_end":165,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6997,"byte_end":7012,"line_start":166,"line_end":166,"column_start":9,"column_end":24},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7022,"byte_end":7040,"line_start":167,"line_end":167,"column_start":9,"column_end":27},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7050,"byte_end":7063,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7073,"byte_end":7089,"line_start":169,"line_end":169,"column_start":9,"column_end":25},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7099,"byte_end":7105,"line_start":170,"line_end":170,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7115,"byte_end":7124,"line_start":171,"line_end":171,"column_start":9,"column_end":18},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7134,"byte_end":7138,"line_start":172,"line_end":172,"column_start":9,"column_end":13},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2904},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7148,"byte_end":7155,"line_start":173,"line_end":173,"column_start":9,"column_end":16},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":3862},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\mod.rs","byte_start":26506,"byte_end":26510,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":3887},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":41819,"byte_end":41829,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":41867,"byte_end":41877,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":41879,"byte_end":41887,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":41889,"byte_end":41897,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":41899,"byte_end":41906,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":41908,"byte_end":41916,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":41975,"byte_end":41990,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":41992,"byte_end":42016,"line_start":13,"line_end":13,"column_start":22,"column_end":46},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42018,"byte_end":42031,"line_start":13,"line_end":13,"column_start":48,"column_end":61},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42033,"byte_end":42055,"line_start":13,"line_end":13,"column_start":63,"column_end":85},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42057,"byte_end":42066,"line_start":13,"line_end":13,"column_start":87,"column_end":96},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42072,"byte_end":42090,"line_start":14,"line_end":14,"column_start":5,"column_end":23},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42092,"byte_end":42101,"line_start":14,"line_end":14,"column_start":25,"column_end":34},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42103,"byte_end":42111,"line_start":14,"line_end":14,"column_start":36,"column_end":44},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42113,"byte_end":42125,"line_start":14,"line_end":14,"column_start":46,"column_end":58},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42127,"byte_end":42138,"line_start":14,"line_end":14,"column_start":60,"column_end":71},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42140,"byte_end":42152,"line_start":14,"line_end":14,"column_start":73,"column_end":85},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42154,"byte_end":42172,"line_start":14,"line_end":14,"column_start":87,"column_end":105},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42174,"byte_end":42190,"line_start":14,"line_end":14,"column_start":107,"column_end":123},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42237,"byte_end":42241,"line_start":18,"line_end":18,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42243,"byte_end":42252,"line_start":18,"line_end":18,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42254,"byte_end":42260,"line_start":18,"line_end":18,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42262,"byte_end":42271,"line_start":18,"line_end":18,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42273,"byte_end":42282,"line_start":18,"line_end":18,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42332,"byte_end":42340,"line_start":21,"line_end":21,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42342,"byte_end":42350,"line_start":21,"line_end":21,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42352,"byte_end":42358,"line_start":21,"line_end":21,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42360,"byte_end":42369,"line_start":21,"line_end":21,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42371,"byte_end":42380,"line_start":21,"line_end":21,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42382,"byte_end":42394,"line_start":21,"line_end":21,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42396,"byte_end":42402,"line_start":21,"line_end":21,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3882},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42429,"byte_end":42436,"line_start":22,"line_end":22,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42438,"byte_end":42446,"line_start":22,"line_end":22,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\mod.rs","byte_start":99781,"byte_end":99787,"line_start":5,"line_end":5,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\mod.rs","byte_start":178895,"byte_end":178905,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":691}},{"kind":"Use","ref_id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\mod.rs","byte_start":178930,"byte_end":178940,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":691}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\mod.rs","byte_start":296134,"byte_end":296135,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"RGBE8Pixel, HDRAdapter, SIGNATURE, rgbe8","parent":{"krate":0,"index":1212}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\mod.rs","byte_start":296134,"byte_end":296135,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1212}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\mod.rs","byte_start":346953,"byte_end":346963,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\mod.rs","byte_start":346988,"byte_end":346998,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":1436}},{"kind":"Use","ref_id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\mod.rs","byte_start":363733,"byte_end":363744,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\mod.rs","byte_start":363770,"byte_end":363781,"line_start":11,"line_end":11,"column_start":25,"column_end":36},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\mod.rs","byte_start":363783,"byte_end":363795,"line_start":11,"line_end":11,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":4544},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\mod.rs","byte_start":363797,"byte_end":363813,"line_start":11,"line_end":11,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1560}},{"kind":"Use","ref_id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439012,"byte_end":439022,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439047,"byte_end":439057,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":4790},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439114,"byte_end":439129,"line_start":10,"line_end":10,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":4800},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439131,"byte_end":439148,"line_start":10,"line_end":10,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439150,"byte_end":439162,"line_start":10,"line_end":10,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":4770},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439164,"byte_end":439177,"line_start":10,"line_end":10,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":4780},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439202,"byte_end":439214,"line_start":11,"line_end":11,"column_start":24,"column_end":36},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439240,"byte_end":439249,"line_start":12,"line_end":12,"column_start":24,"column_end":33},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":4737},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439251,"byte_end":439261,"line_start":12,"line_end":12,"column_start":35,"column_end":45},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":4721},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":439263,"byte_end":439277,"line_start":12,"line_end":12,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":1832}},{"kind":"Use","ref_id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\mod.rs","byte_start":526089,"byte_end":526099,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\mod.rs","byte_start":552379,"byte_end":552390,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":2403}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":0,"byte_end":8716,"line_start":1,"line_end":252,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":29},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":116},{"krate":0,"index":127},{"krate":0,"index":171},{"krate":0,"index":417},{"krate":0,"index":522},{"krate":0,"index":691},{"krate":0,"index":941},{"krate":0,"index":994},{"krate":0,"index":1111},{"krate":0,"index":1212},{"krate":0,"index":1436},{"krate":0,"index":1560},{"krate":0,"index":1755},{"krate":0,"index":1832},{"krate":0,"index":2220},{"krate":0,"index":2329},{"krate":0,"index":2403},{"krate":0,"index":2675},{"krate":0,"index":2770},{"krate":0,"index":2810},{"krate":0,"index":3106},{"krate":0,"index":3302},{"krate":0,"index":3457},{"krate":0,"index":3607},{"krate":0,"index":3695},{"krate":0,"index":3708},{"krate":0,"index":5857},{"krate":0,"index":3709}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5175,"byte_end":5197,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5198,"byte_end":5229,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5230,"byte_end":5255,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5256,"byte_end":5276,"line_start":102,"line_end":102,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5277,"byte_end":5315,"line_start":103,"line_end":103,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":5413,"byte_end":5454,"line_start":106,"line_end":106,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":3710},{"krate":0,"index":3729},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3758},{"krate":0,"index":3756},{"krate":0,"index":3753},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3765},{"krate":0,"index":3768},{"krate":0,"index":3770},{"krate":0,"index":3792},{"krate":0,"index":3790},{"krate":0,"index":3787},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3799},{"krate":0,"index":3801},{"krate":0,"index":3803},{"krate":0,"index":3823},{"krate":0,"index":3821},{"krate":0,"index":3818},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3825},{"krate":0,"index":3849},{"krate":0,"index":3847},{"krate":0,"index":3844},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3711},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":10367,"byte_end":10375,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3714},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":10761,"byte_end":10769,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3717},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":11009,"byte_end":11018,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":11278,"byte_end":11284,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":11622,"byte_end":11633,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3726},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":11724,"byte_end":11731,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":10067,"byte_end":10077,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"ImageError::{Decoding, Encoding, Parameter, Limits, Unsupported, IoError}","parent":null,"children":[{"krate":0,"index":3711},{"krate":0,"index":3714},{"krate":0,"index":3717},{"krate":0,"index":3720},{"krate":0,"index":3723},{"krate":0,"index":3726}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3731},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":11963,"byte_end":11979,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":3732},{"krate":0,"index":3733}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3737},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":12218,"byte_end":12223,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":3736},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":12290,"byte_end":12296,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":3736},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":12440,"byte_end":12454,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":3736},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":12487,"byte_end":12502,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::UnsupportedErrorKind::__NonExhaustive","value":"UnsupportedErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":12139,"byte_end":12159,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"UnsupportedErrorKind::{Color, Format, GenericFeature, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3760},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":12821,"byte_end":12834,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":3762}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3765},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":13216,"byte_end":13230,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":3766},{"krate":0,"index":3767}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":13478,"byte_end":13495,"line_start":122,"line_end":122,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":3770},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":13593,"byte_end":13606,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":3770},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":13734,"byte_end":13741,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":3770},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":13802,"byte_end":13812,"line_start":129,"line_end":129,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":3770},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":13896,"byte_end":13911,"line_start":132,"line_end":132,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ParameterErrorKind::__NonExhaustive","value":"ParameterErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3770},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":13412,"byte_end":13430,"line_start":120,"line_end":120,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"ParameterErrorKind::{DimensionMismatch, FailedAlready, Generic, NoMoreData, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3771},{"krate":0,"index":3773},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3780}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3794},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":14230,"byte_end":14243,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":3795},{"krate":0,"index":3796}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":14643,"byte_end":14653,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":3800}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15185,"byte_end":15199,"line_start":167,"line_end":167,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":3803},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3806},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15283,"byte_end":15301,"line_start":169,"line_end":169,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":3803},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3808},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15385,"byte_end":15400,"line_start":172,"line_end":172,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::LimitErrorKind::__NonExhaustive","value":"LimitErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3803},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3803},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15091,"byte_end":15105,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"LimitErrorKind::{DimensionError, InsufficientMemory, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3804},{"krate":0,"index":3806},{"krate":0,"index":3808}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15007,"byte_end":15045,"line_start":164,"line_end":164,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3826},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15587,"byte_end":15592,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3829},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15660,"byte_end":15664,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15736,"byte_end":15749,"line_start":185,"line_end":185,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15836,"byte_end":15843,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3837},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15869,"byte_end":15884,"line_start":191,"line_end":191,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ImageFormatHint::__NonExhaustive","value":"ImageFormatHint::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15528,"byte_end":15543,"line_start":177,"line_end":177,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"ImageFormatHint::{Exact, Name, PathExtension, Unknown, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3837}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":16156,"byte_end":16176,"line_start":199,"line_end":199,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"fn (format: ImageFormatHint, kind: UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":16404,"byte_end":16408,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"fn (&self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":16547,"byte_end":16558,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":16750,"byte_end":16753,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"fn (format: ImageFormatHint, err: impl Into<Box<dyn Error + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":17121,"byte_end":17137,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"fn (format: ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":17336,"byte_end":17347,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":17540,"byte_end":17543,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"fn (format: ImageFormatHint, err: impl Into<Box<dyn Error + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":17912,"byte_end":17928,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"fn (format: ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18126,"byte_end":18137,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18309,"byte_end":18318,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"fn (kind: ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18525,"byte_end":18529,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"fn (&self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18702,"byte_end":18711,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"fn (kind: LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18876,"byte_end":18880,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"fn (&self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19759,"byte_end":19770,"line_start":333,"line_end":333,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6879,"byte_end":6885,"line_start":162,"line_end":162,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":3851},{"krate":0,"index":3859},{"krate":0,"index":3857},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":152}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":28752,"byte_end":28760,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":29062,"byte_end":29065,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":29606,"byte_end":29610,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":30600,"byte_end":30609,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":30571,"byte_end":30588,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":31161,"byte_end":31169,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":31132,"byte_end":31149,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\utils.rs","parent":null,"children":[{"krate":0,"index":167}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\utils.rs","byte_start":41132,"byte_end":41137,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"fn <N> (a: N, min: N, max: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\utils.rs","byte_start":41115,"byte_end":41124,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3862},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\rect.rs","byte_start":41418,"byte_end":41422,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3863},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\rect.rs","byte_start":41482,"byte_end":41483,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\rect.rs","byte_start":41547,"byte_end":41548,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3865},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\rect.rs","byte_start":41594,"byte_end":41599,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3866},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\rect.rs","byte_start":41646,"byte_end":41652,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":185},{"krate":0,"index":199},{"krate":0,"index":205},{"krate":0,"index":215},{"krate":0,"index":256},{"krate":0,"index":319},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":414}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":50130,"byte_end":50138,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":50470,"byte_end":50479,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":50812,"byte_end":50821,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":51209,"byte_end":51220,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":51994,"byte_end":52006,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":52789,"byte_end":52801,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":53507,"byte_end":53522,"line_start":120,"line_end":120,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":53847,"byte_end":53860,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":54242,"byte_end":54260,"line_start":144,"line_end":144,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":55021,"byte_end":55037,"line_start":169,"line_end":169,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":55764,"byte_end":55782,"line_start":194,"line_end":194,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":56562,"byte_end":56586,"line_start":225,"line_end":225,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\affine.rs","byte_start":56992,"byte_end":57014,"line_start":240,"line_end":240,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":284},{"krate":0,"index":290},{"krate":0,"index":295},{"krate":0,"index":3882},{"krate":0,"index":3885},{"krate":0,"index":3884},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":316}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":62416,"byte_end":62425,"line_start":16,"line_end":16,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn <I> (image: &I) -> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":62964,"byte_end":62970,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":63433,"byte_end":63441,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn <I, P, S> (image: &I, contrast: f32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":64416,"byte_end":64424,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":65410,"byte_end":65419,"line_start":124,"line_end":124,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":67333,"byte_end":67341,"line_start":181,"line_end":181,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":67405,"byte_end":67410,"line_start":183,"line_end":183,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":67502,"byte_end":67510,"line_start":186,"line_end":186,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn (&self, color: &Self::Color) -> usize","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":67616,"byte_end":67625,"line_start":188,"line_end":188,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn (&self, color: &mut Self::Color) -> ()","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3882},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":67721,"byte_end":67728,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":69587,"byte_end":69593,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn <Pix, Map> (image: &mut ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":71138,"byte_end":71150,"line_start":297,"line_end":297,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn <Pix, Map> (image: &ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":74822,"byte_end":74829,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":3887},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":74858,"byte_end":74866,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":3887},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":74894,"byte_end":74904,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":3887},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":74935,"byte_end":74943,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":3887},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":74980,"byte_end":74988,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":3887},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3887},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":74780,"byte_end":74790,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"FilterType::{Nearest, Triangle, CatmullRom, Gaussian, Lanczos3}","parent":null,"children":[{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3892},{"krate":0,"index":3894},{"krate":0,"index":3896}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":84450,"byte_end":84459,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"fn <I, P, S> (image: &I, new_width: u32, new_height: u32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":92318,"byte_end":92327,"line_start":632,"line_end":632,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn <I, P, S> (image: &I, kernel: &[f32]) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":94754,"byte_end":94760,"line_start":712,"line_end":712,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn <I> (image: &I, nwidth: u32, nheight: u32, filter: FilterType) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":95886,"byte_end":95890,"line_start":751,"line_end":751,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn <I> (image: &I, sigma: f32) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":96713,"byte_end":96722,"line_start":778,"line_end":778,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn <I, P, S> (image: &I, sigma: f32, threshold: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42626,"byte_end":42630,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn <I> (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42924,"byte_end":42932,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"fn <I> (image: &I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":45716,"byte_end":45730,"line_start":127,"line_end":127,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"fn ((bottom_width, bottom_height): (u32, u32), (top_width, top_height): (u32, u32), x: u32, y: u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":46244,"byte_end":46251,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":46983,"byte_end":46990,"line_start":168,"line_end":168,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":464},{"krate":0,"index":521}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":101911,"byte_end":101917,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":102417,"byte_end":102420,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"fn (reader: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":102590,"byte_end":102601,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"fn (reader: R, format: ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":102795,"byte_end":102801,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"fn (&self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":102936,"byte_end":102946,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"fn (&mut self, format: ImageFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":103276,"byte_end":103288,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":103375,"byte_end":103385,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":103847,"byte_end":103851,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"fn <P> (path: P) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":105497,"byte_end":105516,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"fn (mut self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":106474,"byte_end":106489,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"fn (mut self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":106883,"byte_end":106889,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"fn (mut self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\free_functions.rs","byte_start":108810,"byte_end":108814,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"fn <R> (r: R, format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\free_functions.rs","byte_start":118065,"byte_end":118077,"line_start":270,"line_end":270,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"fn (buffer: &[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":527},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":3903},{"krate":0,"index":3911},{"krate":0,"index":3908},{"krate":0,"index":3914},{"krate":0,"index":3934},{"krate":0,"index":3933},{"krate":0,"index":3931},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3921},{"krate":0,"index":3936},{"krate":0,"index":3962},{"krate":0,"index":3961},{"krate":0,"index":3959},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3942},{"krate":0,"index":3940},{"krate":0,"index":547},{"krate":0,"index":570},{"krate":0,"index":574},{"krate":0,"index":3964},{"krate":0,"index":3973},{"krate":0,"index":3969},{"krate":0,"index":3977},{"krate":0,"index":3986},{"krate":0,"index":3982},{"krate":0,"index":3990},{"krate":0,"index":4012},{"krate":0,"index":4011},{"krate":0,"index":4009},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":3999},{"krate":0,"index":4014},{"krate":0,"index":4037},{"krate":0,"index":4036},{"krate":0,"index":4034},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4025},{"krate":0,"index":616},{"krate":0,"index":629},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":648},{"krate":0,"index":652},{"krate":0,"index":664},{"krate":0,"index":676},{"krate":0,"index":684},{"krate":0,"index":689}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3903},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":121098,"byte_end":121109,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":121187,"byte_end":121194,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":3903},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":121278,"byte_end":121284,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":3903},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":121739,"byte_end":121749,"line_start":80,"line_end":80,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":3903},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":121899,"byte_end":121911,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":3920}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":121826,"byte_end":121836,"line_start":84,"line_end":84,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":121995,"byte_end":122003,"line_start":88,"line_end":88,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":122089,"byte_end":122103,"line_start":91,"line_end":91,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":122165,"byte_end":122170,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3918},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":122257,"byte_end":122269,"line_start":97,"line_end":97,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":122332,"byte_end":122338,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":122425,"byte_end":122438,"line_start":103,"line_end":103,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":123413,"byte_end":123429,"line_start":127,"line_end":127,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":124680,"byte_end":124699,"line_start":156,"line_end":156,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":125315,"byte_end":125326,"line_start":173,"line_end":173,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":125643,"byte_end":125650,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":126024,"byte_end":126030,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":128183,"byte_end":128193,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":128525,"byte_end":128529,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":129639,"byte_end":129658,"line_start":279,"line_end":279,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":130903,"byte_end":130912,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":132610,"byte_end":132619,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":132893,"byte_end":132898,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":133492,"byte_end":133513,"line_start":384,"line_end":384,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":134444,"byte_end":134459,"line_start":405,"line_end":405,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"fn (&self, c: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":134987,"byte_end":134996,"line_start":416,"line_end":416,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":135669,"byte_end":135680,"line_start":443,"line_end":443,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":135962,"byte_end":135969,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":136297,"byte_end":136303,"line_start":459,"line_end":459,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":136417,"byte_end":136423,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"fn <T> (&self) -> FlatSamples<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":136697,"byte_end":136703,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"fn <T> (&mut self) -> FlatSamples<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":136982,"byte_end":136988,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"fn <T> (&self) -> FlatSamples<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":138261,"byte_end":138271,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"fn <T> (&self, channel: u8, x: u32, y: u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":139868,"byte_end":139882,"line_start":546,"line_end":546,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"fn <T> (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":140546,"byte_end":140553,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"fn <P> (&self) -> Result<View<&[P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":142130,"byte_end":142154,"line_start":598,"line_end":598,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"fn <P> (&mut self) -> Result<View<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":143517,"byte_end":143528,"line_start":631,"line_end":631,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"fn <P> (&mut self) -> Result<ViewMut<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":144525,"byte_end":144533,"line_start":661,"line_end":661,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"fn <T> (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":144844,"byte_end":144856,"line_start":669,"line_end":669,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"fn <T> (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":145287,"byte_end":145298,"line_start":678,"line_end":678,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"fn <T> (&self) -> Option<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":145715,"byte_end":145730,"line_start":693,"line_end":693,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"fn <T> (&mut self) -> Option<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":146384,"byte_end":146399,"line_start":712,"line_end":712,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"fn <P> (self) -> Result<ImageBuffer<P, Buffer>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":149235,"byte_end":149245,"line_start":786,"line_end":786,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":149382,"byte_end":149386,"line_start":791,"line_end":791,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":149807,"byte_end":149826,"line_start":800,"line_end":800,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":150407,"byte_end":150416,"line_start":811,"line_end":811,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":150841,"byte_end":150850,"line_start":820,"line_end":820,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":151100,"byte_end":151105,"line_start":827,"line_end":827,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":151584,"byte_end":151605,"line_start":836,"line_end":836,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":152037,"byte_end":152052,"line_start":845,"line_end":845,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"fn (&self, channel: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":152487,"byte_end":152496,"line_start":854,"line_end":854,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3964},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":153315,"byte_end":153319,"line_start":874,"line_end":874,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":154165,"byte_end":154172,"line_start":897,"line_end":897,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":3980},{"krate":0,"index":3981}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3991},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":154880,"byte_end":154888,"line_start":916,"line_end":916,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":155045,"byte_end":155063,"line_start":921,"line_end":921,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3996},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":155672,"byte_end":155682,"line_start":932,"line_end":932,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3990},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":154745,"byte_end":154750,"line_start":912,"line_end":912,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"Error::{TooLarge, NormalFormRequired, WrongColor}","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":3993},{"krate":0,"index":3996}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4015},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":156181,"byte_end":156190,"line_start":945,"line_end":945,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":4014},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4017},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":156420,"byte_end":156431,"line_start":951,"line_end":951,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":4014},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":156715,"byte_end":156726,"line_start":958,"line_end":958,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":4014},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4021},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":156936,"byte_end":156950,"line_start":964,"line_end":964,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":4014},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4023},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":157166,"byte_end":157183,"line_start":970,"line_end":970,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":4014},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":155941,"byte_end":155951,"line_start":940,"line_end":940,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"NormalForm::{Unaliased, PixelPacked, ImagePacked, RowMajorPacked, ColumnMajorPacked}","parent":null,"children":[{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":157391,"byte_end":157401,"line_start":980,"line_end":980,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":157884,"byte_end":157888,"line_start":990,"line_end":990,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":158167,"byte_end":158174,"line_start":998,"line_end":998,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":158493,"byte_end":158503,"line_start":1006,"line_end":1006,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":159377,"byte_end":159391,"line_start":1024,"line_end":1024,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":159968,"byte_end":159978,"line_start":1039,"line_end":1039,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":160312,"byte_end":160323,"line_start":1047,"line_end":1047,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":160780,"byte_end":160795,"line_start":1056,"line_end":1056,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":161318,"byte_end":161327,"line_start":1068,"line_end":1068,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":162331,"byte_end":162342,"line_start":1091,"line_end":1091,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"fn (self) -> Result<ViewMut<Buffer, P>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":162983,"byte_end":162993,"line_start":1113,"line_end":1113,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":163477,"byte_end":163481,"line_start":1123,"line_end":1123,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":163854,"byte_end":163861,"line_start":1132,"line_end":1132,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":164103,"byte_end":164113,"line_start":1139,"line_end":1139,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":164424,"byte_end":164434,"line_start":1147,"line_end":1147,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":165059,"byte_end":165073,"line_start":1163,"line_end":1163,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":165684,"byte_end":165695,"line_start":1177,"line_end":1177,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":165894,"byte_end":165909,"line_start":1182,"line_end":1182,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":166377,"byte_end":166386,"line_start":1192,"line_end":1192,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":902}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7339,"byte_end":7362,"line_start":190,"line_end":190,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":196916,"byte_end":196926,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":199494,"byte_end":199497,"line_start":632,"line_end":632,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":211295,"byte_end":211322,"line_start":945,"line_end":945,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BmpDecoder<R>>::read_metadata_in_ico_format","value":"fn (&mut self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":211241,"byte_end":211264,"line_start":943,"line_end":943,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":231251,"byte_end":231260,"line_start":1419,"line_end":1419,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\encoder.rs","byte_start":233886,"byte_end":233896,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":922}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\encoder.rs","byte_start":234055,"byte_end":234058,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"fn (w: &'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\encoder.rs","byte_start":234266,"byte_end":234272,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dds","qualname":"::dds","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":954},{"krate":0,"index":961},{"krate":0,"index":4227},{"krate":0,"index":4260},{"krate":0,"index":4259},{"krate":0,"index":4257},{"krate":0,"index":4254},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4241},{"krate":0,"index":4239},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":4262},{"krate":0,"index":4272},{"krate":0,"index":4274},{"krate":0,"index":4283},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":985}],"decl_id":null,"docs":"  Decoding of DDS images","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7376,"byte_end":7399,"line_start":192,"line_end":192,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":249935,"byte_end":249945,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"DdsDecoder","qualname":"::dds::DdsDecoder","value":"DdsDecoder {  }","parent":null,"children":[{"krate":0,"index":980}],"decl_id":null,"docs":" The representation of a DDS decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":250089,"byte_end":250092,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<DdsDecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::dxt","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1008},{"krate":0,"index":4285},{"krate":0,"index":4301},{"krate":0,"index":4300},{"krate":0,"index":4298},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":1014},{"krate":0,"index":1018},{"krate":0,"index":1025},{"krate":0,"index":1029},{"krate":0,"index":1038},{"krate":0,"index":1046},{"krate":0,"index":1050},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1095},{"krate":0,"index":1099},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1109}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7413,"byte_end":7436,"line_start":194,"line_end":194,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":253029,"byte_end":253033,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":253164,"byte_end":253168,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4290},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":253299,"byte_end":253303,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":4285},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":252888,"byte_end":252898,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::dxt::DXTVariant","value":"DXTVariant::{DXT1, DXT3, DXT5}","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4288},{"krate":0,"index":4290}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":253924,"byte_end":253934,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"color_type","qualname":"<DXTVariant>::color_type","value":"fn (self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type that is stored in this DXT variant\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":254141,"byte_end":254151,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"DxtDecoder","qualname":"::dxt::DxtDecoder","value":"DxtDecoder {  }","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":254731,"byte_end":254734,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtDecoder<R>>::new","value":"fn (r: R, width: u32, height: u32, variant: DXTVariant) -> Result<DxtDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":257830,"byte_end":257839,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"DXTReader","qualname":"::dxt::DXTReader","value":"DXTReader {  }","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":258151,"byte_end":258161,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"DXTEncoder","qualname":"::dxt::DXTEncoder","value":"DXTEncoder {  }","parent":null,"children":[{"krate":0,"index":1056}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":258292,"byte_end":258295,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTEncoder<W>>::new","value":"fn (w: W) -> DXTEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":258559,"byte_end":258565,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"encode","qualname":"<DXTEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, variant: DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.color_type()\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1141},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1158},{"krate":0,"index":1162},{"krate":0,"index":1172},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1187},{"krate":0,"index":1191},{"krate":0,"index":1195},{"krate":0,"index":1209}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7450,"byte_end":7473,"line_start":196,"line_end":196,"column_start":1,"column_end":24}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":281377,"byte_end":281410,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":281995,"byte_end":282005,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":1149}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":282156,"byte_end":282159,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"fn (r: R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":282460,"byte_end":282469,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":291428,"byte_end":291435,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":291585,"byte_end":291588,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":291743,"byte_end":291749,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"fn (&mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":292463,"byte_end":292475,"line_start":329,"line_end":329,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<Encoder<W>>::encode_frame","value":"fn (&mut self, img_frame: animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":292761,"byte_end":292774,"line_start":336,"line_end":336,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<Encoder<W>>::encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":293252,"byte_end":293269,"line_start":349,"line_end":349,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<Encoder<W>>::try_encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1383},{"krate":0,"index":1434},{"krate":0,"index":1435}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7487,"byte_end":7510,"line_start":198,"line_end":198,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4376},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":300641,"byte_end":300651,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":4378},{"krate":0,"index":4379}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":300824,"byte_end":300827,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":301100,"byte_end":301113,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":302090,"byte_end":302099,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":303543,"byte_end":303552,"line_start":216,"line_end":216,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4383},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":303670,"byte_end":303680,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"HdrDecoder","qualname":"::hdr::decoder::HdrDecoder","value":"HdrDecoder {  }","parent":null,"children":[{"krate":0,"index":4385},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4388}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4392},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":303905,"byte_end":303915,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":4393},{"krate":0,"index":4395}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":303829,"byte_end":303839,"line_start":229,"line_end":229,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4393},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":303951,"byte_end":303952,"line_start":233,"line_end":233,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::decoder::RGBE8Pixel::c","value":"[u8; _]","parent":{"krate":0,"index":4392},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4395},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":303988,"byte_end":303989,"line_start":235,"line_end":235,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":4392},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":304050,"byte_end":304055,"line_start":239,"line_end":239,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::decoder::rgbe8","value":"fn (r: u8, g: u8, b: u8, e: u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":304244,"byte_end":304250,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"fn (self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":304223,"byte_end":304232,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":305010,"byte_end":305016,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"fn <T> (self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":304989,"byte_end":304998,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":305402,"byte_end":305420,"line_start":281,"line_end":281,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"fn <T> (self, scale: f32, gamma: f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":305381,"byte_end":305390,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":306628,"byte_end":306631,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HdrDecoder\n strict mode is enabled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":307039,"byte_end":307054,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HdrDecoder<R>>::with_strictness","value":"fn (mut reader: R, strict: bool) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HdrDecoder```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":309607,"byte_end":309615,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HdrDecoder<R>>::metadata","value":"fn (&self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":309746,"byte_end":309763,"line_start":395,"line_end":395,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HdrDecoder<R>>::read_image_native","value":"fn (mut self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":310396,"byte_end":310416,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HdrDecoder<R>>::read_image_transform","value":"fn <T, F> (mut self, f: F, output_slice: &mut [T]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":311555,"byte_end":311569,"line_start":446,"line_end":446,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HdrDecoder<R>>::read_image_ldr","value":"fn (self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":311873,"byte_end":311887,"line_start":454,"line_end":454,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HdrDecoder<R>>::read_image_hdr","value":"fn (self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":312698,"byte_end":312721,"line_start":479,"line_end":479,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4412},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":320286,"byte_end":320297,"line_start":701,"line_end":701,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":320435,"byte_end":320440,"line_start":704,"line_end":704,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":4412},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4414},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":320519,"byte_end":320525,"line_start":706,"line_end":706,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":4412},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4415},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":320800,"byte_end":320811,"line_start":710,"line_end":710,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":4412},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4416},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":321036,"byte_end":321044,"line_start":715,"line_end":715,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::decoder::HDRMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":4412},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":321288,"byte_end":321304,"line_start":720,"line_end":720,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::decoder::HDRMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":4412},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4418},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":321383,"byte_end":321401,"line_start":722,"line_end":722,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::decoder::HDRMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":4412},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4419},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":321630,"byte_end":321647,"line_start":726,"line_end":726,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":4412},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":330739,"byte_end":330752,"line_start":947,"line_end":947,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::decoder::read_raw_file","value":"fn <P> (path: P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":331573,"byte_end":331583,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":331675,"byte_end":331678,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"fn (w: W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":331841,"byte_end":331847,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"fn (mut self, data: &[Rgb<f32>], width: usize, height: usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":339277,"byte_end":339285,"line_start":228,"line_end":228,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::encoder::to_rgbe8","value":"fn (pix: Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1530}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7524,"byte_end":7547,"line_start":200,"line_end":200,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":351090,"byte_end":351100,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"IcoDecoder","qualname":"::ico::decoder::IcoDecoder","value":"IcoDecoder {  }","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":351598,"byte_end":351601,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoDecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<IcoDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":355069,"byte_end":355078,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\encoder.rs","byte_start":360644,"byte_end":360654,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":1546}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\encoder.rs","byte_start":360786,"byte_end":360789,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"fn (w: W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\encoder.rs","byte_start":361087,"byte_end":361093,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1566},{"krate":0,"index":1615},{"krate":0,"index":1736},{"krate":0,"index":1739}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7561,"byte_end":7585,"line_start":202,"line_end":202,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":364191,"byte_end":364202,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":364381,"byte_end":364384,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"fn (r: R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":364942,"byte_end":364952,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4545},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":396470,"byte_end":396486,"line_start":279,"line_end":279,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4547},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":396527,"byte_end":396533,"line_start":282,"line_end":282,"column_start":5,"column_end":11},"name":"Inches","qualname":"::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":396570,"byte_end":396581,"line_start":285,"line_end":285,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4544},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":396299,"byte_end":396315,"line_start":276,"line_end":276,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::jpeg::encoder::PixelDensityUnit","value":"PixelDensityUnit::{PixelAspectRatio, Inches, Centimeters}","parent":null,"children":[{"krate":0,"index":4545},{"krate":0,"index":4547},{"krate":0,"index":4549}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":396918,"byte_end":396930,"line_start":298,"line_end":298,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":4563},{"krate":0,"index":4564}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4563},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":396993,"byte_end":397000,"line_start":300,"line_end":300,"column_start":9,"column_end":16},"name":"density","qualname":"::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4564},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":397072,"byte_end":397076,"line_start":302,"line_end":302,"column_start":9,"column_end":13},"name":"unit","qualname":"::jpeg::encoder::PixelDensity::unit","value":"jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":397282,"byte_end":397285,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"fn (density: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":397736,"byte_end":397747,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":398137,"byte_end":398140,"line_start":344,"line_end":344,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"fn (w: &mut W) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":398433,"byte_end":398449,"line_start":351,"line_end":351,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"fn (w: &mut W, quality: u8) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":400817,"byte_end":400834,"line_start":423,"line_end":423,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JPEGEncoder>::set_pixel_density","value":"fn (&mut self, pixel_density: PixelDensity) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":401136,"byte_end":401142,"line_start":432,"line_end":432,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1774},{"krate":0,"index":1778},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1790},{"krate":0,"index":1794},{"krate":0,"index":1798},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1821},{"krate":0,"index":1829}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7600,"byte_end":7623,"line_start":204,"line_end":204,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":426417,"byte_end":426426,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"PNGReader","qualname":"::png::PNGReader","value":"PNGReader {  }","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782}],"decl_id":null,"docs":" PNG Reader","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":428459,"byte_end":428469,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":428647,"byte_end":428650,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"fn (r: R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":433430,"byte_end":433440,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":1814}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":433571,"byte_end":433574,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"fn (w: W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":433773,"byte_end":433779,"line_start":220,"line_end":220,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::pnm","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\mod.rs","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1843},{"krate":0,"index":1847},{"krate":0,"index":1867},{"krate":0,"index":2033},{"krate":0,"index":2169}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7637,"byte_end":7660,"line_start":206,"line_end":206,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":455379,"byte_end":455389,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"PnmDecoder","qualname":"::pnm::decoder::PnmDecoder","value":"PnmDecoder {  }","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":455579,"byte_end":455582,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmDecoder<R>>::new","value":"fn (read: R) -> ImageResult<PnmDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":456756,"byte_end":456766,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PnmDecoder<R>>::into_inner","value":"fn (self) -> (R, PNMHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":466243,"byte_end":466252,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":469844,"byte_end":469851,"line_start":611,"line_end":611,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmDecoder<R>>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4710},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":492311,"byte_end":492313,"line_start":27,"line_end":27,"column_start":5,"column_end":7},"name":"U8","qualname":"::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":4708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4713},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":492329,"byte_end":492332,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"U16","qualname":"::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":4708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4708},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":492289,"byte_end":492300,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::pnm::encoder::FlatSamples","value":"FlatSamples::{U8, U16}","parent":null,"children":[{"krate":0,"index":4710},{"krate":0,"index":4713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":492413,"byte_end":492423,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"PNMEncoder","qualname":"::pnm::encoder::PNMEncoder","value":"PNMEncoder {  }","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":493813,"byte_end":493816,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMEncoder<W>>::new","value":"fn (writer: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":494366,"byte_end":494378,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PNMEncoder<W>>::with_subtype","value":"fn (self, subtype: PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":495084,"byte_end":495095,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PNMEncoder<W>>::with_header","value":"fn (self, header: PNMHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":495666,"byte_end":495685,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PNMEncoder<W>>::with_dynamic_header","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":496061,"byte_end":496067,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNMEncoder<W>>::encode","value":"fn <'s, S> (&mut self, image: S, width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4722},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515114,"byte_end":515120,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":4721},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4724},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515204,"byte_end":515209,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":4721},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4721},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515034,"byte_end":515048,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::pnm::header::SampleEncoding","value":"SampleEncoding::{Binary, Ascii}","parent":null,"children":[{"krate":0,"index":4722},{"krate":0,"index":4724}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4738},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515362,"byte_end":515368,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":4737},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4741},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515423,"byte_end":515430,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":4737},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4744},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515485,"byte_end":515491,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":4737},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4747},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515538,"byte_end":515550,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":4737},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4737},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515313,"byte_end":515323,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::pnm::header::PNMSubtype","value":"PNMSubtype::{Bitmap, Graymap, Pixmap, ArbitraryMap}","parent":null,"children":[{"krate":0,"index":4738},{"krate":0,"index":4741},{"krate":0,"index":4744},{"krate":0,"index":4747}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":515942,"byte_end":515951,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PNMHeader","qualname":"::pnm::header::PNMHeader","value":"PNMHeader {  }","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2175}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516280,"byte_end":516292,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4762},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516340,"byte_end":516348,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::BitmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4763},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516408,"byte_end":516414,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4764},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516462,"byte_end":516467,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":4761},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4770},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516576,"byte_end":516589,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4771},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516637,"byte_end":516645,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::GraymapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4770},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4772},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516705,"byte_end":516711,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":4770},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4773},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516759,"byte_end":516764,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":4770},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4774},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516826,"byte_end":516834,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":4770},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4780},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":516944,"byte_end":516956,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4781},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517004,"byte_end":517012,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::PixmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4780},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4782},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517072,"byte_end":517078,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":4780},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4783},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517126,"byte_end":517131,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":4780},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4784},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517193,"byte_end":517199,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":4780},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4790},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517307,"byte_end":517322,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4791},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517366,"byte_end":517372,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":4790},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4792},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517420,"byte_end":517425,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":4790},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4793},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517474,"byte_end":517479,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":4790},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517541,"byte_end":517547,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":4790},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4795},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517608,"byte_end":517616,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":4790},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4801},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517819,"byte_end":517832,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4803},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517915,"byte_end":517933,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4805},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517985,"byte_end":517994,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4807},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518052,"byte_end":518066,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4809},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518114,"byte_end":518117,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4811},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518171,"byte_end":518179,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4813},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518236,"byte_end":518242,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4800},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":517746,"byte_end":517763,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::pnm::header::ArbitraryTuplType","value":"ArbitraryTuplType::{BlackAndWhite, BlackAndWhiteAlpha, Grayscale, GrayscaleAlpha, RGB, RGBAlpha, Custom}","parent":null,"children":[{"krate":0,"index":4801},{"krate":0,"index":4803},{"krate":0,"index":4805},{"krate":0,"index":4807},{"krate":0,"index":4809},{"krate":0,"index":4811},{"krate":0,"index":4813}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518892,"byte_end":518906,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"fn (self) -> &'static [u8; 2]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":519485,"byte_end":519500,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"fn (self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":519863,"byte_end":519870,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMHeader>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":520385,"byte_end":520390,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"width","qualname":"<PNMHeader>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":520808,"byte_end":520814,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"height","qualname":"<PNMHeader>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":521272,"byte_end":521286,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PNMHeader>::maximal_sample","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":521704,"byte_end":521713,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PNMHeader>::as_bitmap","value":"fn (&self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":521944,"byte_end":521954,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PNMHeader>::as_graymap","value":"fn (&self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":522188,"byte_end":522197,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PNMHeader>::as_pixmap","value":"fn (&self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":522430,"byte_end":522442,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PNMHeader>::as_arbitrary","value":"fn (&self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":522682,"byte_end":522687,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"write","qualname":"<PNMHeader>::write","value":"fn (&self, writer: &mut dyn io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7674,"byte_end":7697,"line_start":208,"line_end":208,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":530629,"byte_end":530639,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"TgaDecoder","qualname":"::tga::decoder::TgaDecoder","value":"TgaDecoder {  }","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":531065,"byte_end":531068,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaDecoder<R>>::new","value":"fn (r: R) -> ImageResult<TgaDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2321},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":543526,"byte_end":543535,"line_start":531,"line_end":531,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2343},{"krate":0,"index":2346},{"krate":0,"index":2357},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2367},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2374},{"krate":0,"index":2379},{"krate":0,"index":2383},{"krate":0,"index":2391},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2400}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7711,"byte_end":7735,"line_start":210,"line_end":210,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":544657,"byte_end":544668,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"TiffDecoder","qualname":"::tiff::TiffDecoder","value":"TiffDecoder {  }","parent":null,"children":[{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":544890,"byte_end":544893,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffDecoder<R>>::new","value":"fn (r: R) -> Result<TiffDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TiffDecoder.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":548107,"byte_end":548117,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2391},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":549760,"byte_end":549771,"line_start":174,"line_end":174,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":2393}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":550497,"byte_end":550500,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"fn (w: W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":550732,"byte_end":550738,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2476},{"krate":0,"index":2482}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7750,"byte_end":7774,"line_start":212,"line_end":212,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":554243,"byte_end":554254,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"WebPDecoder","qualname":"::webp::decoder::WebPDecoder","value":"WebPDecoder {  }","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447}],"decl_id":null,"docs":" WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded\n images will be grayscale).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":554466,"byte_end":554469,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<WebPDecoder<R>>::new","value":"fn (r: R) -> ImageResult<WebPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebPDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":557146,"byte_end":557156,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":4851},{"krate":0,"index":4876},{"krate":0,"index":4875},{"krate":0,"index":4873},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4878},{"krate":0,"index":4900},{"krate":0,"index":4899},{"krate":0,"index":4897},{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4902},{"krate":0,"index":4942},{"krate":0,"index":4941},{"krate":0,"index":4939},{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4933},{"krate":0,"index":4934},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2531},{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2561},{"krate":0,"index":4944},{"krate":0,"index":4946},{"krate":0,"index":2563},{"krate":0,"index":4948},{"krate":0,"index":4971},{"krate":0,"index":4968},{"krate":0,"index":4967},{"krate":0,"index":2565},{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2576},{"krate":0,"index":4973},{"krate":0,"index":4986},{"krate":0,"index":4982},{"krate":0,"index":4981},{"krate":0,"index":4988},{"krate":0,"index":5003},{"krate":0,"index":5001},{"krate":0,"index":4999},{"krate":0,"index":5005},{"krate":0,"index":5018},{"krate":0,"index":5017},{"krate":0,"index":5015},{"krate":0,"index":2584},{"krate":0,"index":2607},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4988},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":591482,"byte_end":591487,"line_start":839,"line_end":839,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4989},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":591534,"byte_end":591539,"line_start":841,"line_end":841,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4990},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":591592,"byte_end":591598,"line_start":844,"line_end":844,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":591650,"byte_end":591654,"line_start":847,"line_end":847,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4992},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":591725,"byte_end":591733,"line_start":850,"line_end":850,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4994},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":591829,"byte_end":591840,"line_start":855,"line_end":855,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4995},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":591971,"byte_end":591981,"line_start":860,"line_end":860,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":4988},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":592357,"byte_end":592367,"line_start":888,"line_end":888,"column_start":12,"column_end":22},"name":"Vp8Decoder","qualname":"::webp::vp8::Vp8Decoder","value":"Vp8Decoder {  }","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":593031,"byte_end":593034,"line_start":923,"line_end":923,"column_start":12,"column_end":15},"name":"new","qualname":"<Vp8Decoder<R>>::new","value":"fn (r: R) -> Vp8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":613192,"byte_end":613204,"line_start":1543,"line_end":1543,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<Vp8Decoder<R>>::decode_frame","value":"fn (&mut self) -> ImageResult<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2675},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"farbfeld","qualname":"::farbfeld","value":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2686},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2698},{"krate":0,"index":2705},{"krate":0,"index":2712},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2735},{"krate":0,"index":2738},{"krate":0,"index":2741},{"krate":0,"index":2749},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2767}],"decl_id":null,"docs":" Decoding of farbfeld images","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7789,"byte_end":7817,"line_start":214,"line_end":214,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":639209,"byte_end":639223,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"FarbfeldReader","qualname":"::farbfeld::FarbfeldReader","value":"FarbfeldReader {  }","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711}],"decl_id":null,"docs":" farbfeld Reader\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":643931,"byte_end":643946,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"FarbfeldDecoder","qualname":"::farbfeld::FarbfeldDecoder","value":"FarbfeldDecoder {  }","parent":null,"children":[{"krate":0,"index":2737}],"decl_id":null,"docs":" farbfeld decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":644105,"byte_end":644108,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldDecoder<R>>::new","value":"fn (r: R) -> ImageResult<FarbfeldDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":645451,"byte_end":645466,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"FarbfeldEncoder","qualname":"::farbfeld::FarbfeldEncoder","value":"FarbfeldEncoder {  }","parent":null,"children":[{"krate":0,"index":2759}],"decl_id":null,"docs":" farbfeld encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":645613,"byte_end":645616,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldEncoder<W>>::new","value":"fn (w: W) -> FarbfeldEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":645824,"byte_end":645830,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"encode","qualname":"<FarbfeldEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data``` (native endian)\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":650420,"byte_end":650426,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2778}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":650606,"byte_end":650609,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn (iterator: Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651001,"byte_end":651015,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"fn (self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5020},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651304,"byte_end":651309,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651591,"byte_end":651596,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":5028}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651698,"byte_end":651701,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn (buffer: RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651929,"byte_end":651939,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn (buffer: RgbaImage, left: u32, top: u32, delay: Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":652151,"byte_end":652156,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn (&self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":652245,"byte_end":652251,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn (&self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":652347,"byte_end":652358,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":652447,"byte_end":652451,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":652533,"byte_end":652536,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":652801,"byte_end":652820,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"fn (numerator: u32, denominator: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":653463,"byte_end":653487,"line_start":129,"line_end":129,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"fn (duration: Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":654663,"byte_end":654677,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"fn (self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":661933,"byte_end":661939,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2850}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662708,"byte_end":662717,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":2869}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":663541,"byte_end":663545,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":2888}],"decl_id":null,"docs":" Iterate over rows of an image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2904},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664474,"byte_end":664481,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":2907}],"decl_id":null,"docs":" Iterate over mutable rows of an image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":665441,"byte_end":665456,"line_start":184,"line_end":184,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":666204,"byte_end":666217,"line_start":222,"line_end":222,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":667080,"byte_end":667098,"line_start":265,"line_end":265,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":667863,"byte_end":667879,"line_start":303,"line_end":303,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5047},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":670332,"byte_end":670343,"line_start":395,"line_end":395,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2992},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":671101,"byte_end":671109,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn (width: u32, height: u32, buf: Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":671515,"byte_end":671523,"line_start":431,"line_end":431,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn (self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":671625,"byte_end":671635,"line_start":436,"line_end":436,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":671744,"byte_end":671749,"line_start":441,"line_end":441,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":671837,"byte_end":671843,"line_start":446,"line_end":446,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":671957,"byte_end":671963,"line_start":451,"line_end":451,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn (&self) -> Pixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":672164,"byte_end":672168,"line_start":458,"line_end":458,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"fn (&self) -> Rows<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":672511,"byte_end":672527,"line_start":469,"line_end":469,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn (&self) -> EnumeratePixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":672859,"byte_end":672873,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"fn (&self) -> EnumerateRows<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":673194,"byte_end":673203,"line_start":494,"line_end":494,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn (&self, x: u32, y: u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":674929,"byte_end":674942,"line_start":535,"line_end":535,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"fn (&self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":675556,"byte_end":675573,"line_start":546,"line_end":546,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"fn (self) -> FlatSamples<Container>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":676019,"byte_end":676034,"line_start":561,"line_end":561,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"fn (&self) -> FlatSamples<&[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":676553,"byte_end":676563,"line_start":580,"line_end":580,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn (&mut self) -> PixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":676786,"byte_end":676794,"line_start":587,"line_end":587,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"fn (&mut self) -> RowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":677159,"byte_end":677179,"line_start":598,"line_end":598,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn (&mut self) -> EnumeratePixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":677553,"byte_end":677571,"line_start":611,"line_end":611,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"fn (&mut self) -> EnumerateRowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":677934,"byte_end":677947,"line_start":625,"line_end":625,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":678396,"byte_end":678405,"line_start":637,"line_end":637,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":678850,"byte_end":678854,"line_start":652,"line_end":652,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn <Q> (&self, path: Q) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":679529,"byte_end":679545,"line_start":678,"line_end":678,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":686100,"byte_end":686103,"line_start":891,"line_end":891,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"fn (width: u32, height: u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":686641,"byte_end":686651,"line_start":907,"line_end":907,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"fn (width: u32, height: u32, pixel: P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":687166,"byte_end":687173,"line_start":922,"line_end":922,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"fn <F> (width: u32, height: u32, mut f: F) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":687584,"byte_end":687592,"line_start":935,"line_end":935,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"fn (width: u32, height: u32, buf: Vec<P::Subpixel>) -> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":687879,"byte_end":687887,"line_start":945,"line_end":945,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"fn (self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":688015,"byte_end":688028,"line_start":951,"line_end":951,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":3085}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":688215,"byte_end":688222,"line_start":956,"line_end":956,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"fn (&self) -> T","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":688490,"byte_end":688504,"line_start":964,"line_end":964,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn (self, palette: &[(u8, u8, u8)], transparent_idx: Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":690248,"byte_end":690256,"line_start":1016,"line_end":1016,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":690345,"byte_end":690354,"line_start":1018,"line_end":1018,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":690434,"byte_end":690443,"line_start":1020,"line_end":1020,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":690539,"byte_end":690553,"line_start":1022,"line_end":1022,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5059},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698061,"byte_end":698063,"line_start":10,"line_end":10,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5061},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698124,"byte_end":698127,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5063},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698182,"byte_end":698186,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5065},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698241,"byte_end":698246,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5067},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698287,"byte_end":698290,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5069},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698352,"byte_end":698356,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5071},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698390,"byte_end":698395,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5073},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698430,"byte_end":698436,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5075},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698492,"byte_end":698496,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ColorType::Bgr8","value":"ColorType::Bgr8","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5077},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698551,"byte_end":698556,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ColorType::Bgra8","value":"ColorType::Bgra8","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5079},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698582,"byte_end":698597,"line_start":33,"line_end":33,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ColorType::__NonExhaustive","value":"ColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5058},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698012,"byte_end":698021,"line_start":8,"line_end":8,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"ColorType::{L8, La8, Rgb8, Rgba8, L16, La16, Rgb16, Rgba16, Bgr8, Bgra8, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5059},{"krate":0,"index":5061},{"krate":0,"index":5063},{"krate":0,"index":5065},{"krate":0,"index":5067},{"krate":0,"index":5069},{"krate":0,"index":5071},{"krate":0,"index":5073},{"krate":0,"index":5075},{"krate":0,"index":5077},{"krate":0,"index":5079}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698745,"byte_end":698760,"line_start":38,"line_end":38,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":699223,"byte_end":699232,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":699626,"byte_end":699640,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":699803,"byte_end":699816,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5098},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700445,"byte_end":700447,"line_start":83,"line_end":83,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5100},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700453,"byte_end":700456,"line_start":84,"line_end":84,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5102},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700462,"byte_end":700466,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5104},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700472,"byte_end":700477,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5106},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700483,"byte_end":700485,"line_start":87,"line_end":87,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5108},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700491,"byte_end":700494,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5110},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700500,"byte_end":700504,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5112},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700510,"byte_end":700515,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5114},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700521,"byte_end":700523,"line_start":91,"line_end":91,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5116},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700529,"byte_end":700532,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5118},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700538,"byte_end":700542,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5120},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700548,"byte_end":700553,"line_start":94,"line_end":94,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5122},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700559,"byte_end":700561,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5124},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700567,"byte_end":700570,"line_start":96,"line_end":96,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5126},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700576,"byte_end":700580,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5128},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700586,"byte_end":700591,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700597,"byte_end":700600,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5132},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700606,"byte_end":700610,"line_start":100,"line_end":100,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5134},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700616,"byte_end":700621,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5136},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700627,"byte_end":700633,"line_start":102,"line_end":102,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5138},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700639,"byte_end":700643,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5140},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700649,"byte_end":700654,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5142},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700883,"byte_end":700890,"line_start":109,"line_end":109,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5145},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700920,"byte_end":700935,"line_start":112,"line_end":112,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ExtendedColorType::__NonExhaustive","value":"ExtendedColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5097},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700421,"byte_end":700438,"line_start":82,"line_end":82,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"ExtendedColorType::{L1, La1, Rgb1, Rgba1, L2, La2, Rgb2, Rgba2, L4, La4, Rgb4, Rgba4, L8, La8, Rgb8, Rgba8, L16, La16, Rgb16, Rgba16, Bgr8, Bgra8, Unknown, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5098},{"krate":0,"index":5100},{"krate":0,"index":5102},{"krate":0,"index":5104},{"krate":0,"index":5106},{"krate":0,"index":5108},{"krate":0,"index":5110},{"krate":0,"index":5112},{"krate":0,"index":5114},{"krate":0,"index":5116},{"krate":0,"index":5118},{"krate":0,"index":5120},{"krate":0,"index":5122},{"krate":0,"index":5124},{"krate":0,"index":5126},{"krate":0,"index":5128},{"krate":0,"index":5130},{"krate":0,"index":5132},{"krate":0,"index":5134},{"krate":0,"index":5136},{"krate":0,"index":5138},{"krate":0,"index":5140},{"krate":0,"index":5142},{"krate":0,"index":5145}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":701218,"byte_end":701231,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5463},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":707595,"byte_end":707598,"line_start":340,"line_end":340,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703345,"byte_end":703355,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703356,"byte_end":703378,"line_start":183,"line_end":183,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5492},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":707675,"byte_end":707678,"line_start":341,"line_end":341,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703345,"byte_end":703355,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703356,"byte_end":703378,"line_start":183,"line_end":183,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5521},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":707754,"byte_end":707758,"line_start":342,"line_end":342,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703345,"byte_end":703355,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703356,"byte_end":703378,"line_start":183,"line_end":183,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5550},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":707835,"byte_end":707839,"line_start":343,"line_end":343,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703345,"byte_end":703355,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703356,"byte_end":703378,"line_start":183,"line_end":183,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5579},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":707935,"byte_end":707939,"line_start":344,"line_end":344,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703345,"byte_end":703355,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703356,"byte_end":703378,"line_start":183,"line_end":183,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5608},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":708034,"byte_end":708039,"line_start":345,"line_end":345,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703345,"byte_end":703355,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":703356,"byte_end":703378,"line_start":183,"line_end":183,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":708206,"byte_end":708215,"line_start":349,"line_end":349,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":3130}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":708305,"byte_end":708315,"line_start":351,"line_end":351,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn (&mut self, _: &Other) -> ()","parent":{"krate":0,"index":3128},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5689},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736223,"byte_end":736233,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5692},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736309,"byte_end":736320,"line_start":44,"line_end":44,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5695},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736389,"byte_end":736398,"line_start":47,"line_end":47,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5698},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736472,"byte_end":736482,"line_start":50,"line_end":50,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5701},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736546,"byte_end":736555,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5704},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736629,"byte_end":736639,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5707},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736705,"byte_end":736716,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5710},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736795,"byte_end":736807,"line_start":62,"line_end":62,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5713},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736879,"byte_end":736889,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5716},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736966,"byte_end":736977,"line_start":68,"line_end":68,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":5688},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":736157,"byte_end":736169,"line_start":39,"line_end":39,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"DynamicImage::{ImageLuma8, ImageLumaA8, ImageRgb8, ImageRgba8, ImageBgr8, ImageBgra8, ImageLuma16, ImageLumaA16, ImageRgb16, ImageRgba16}","parent":null,"children":[{"krate":0,"index":5689},{"krate":0,"index":5692},{"krate":0,"index":5695},{"krate":0,"index":5698},{"krate":0,"index":5701},{"krate":0,"index":5704},{"krate":0,"index":5707},{"krate":0,"index":5710},{"krate":0,"index":5713},{"krate":0,"index":5716}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":741192,"byte_end":741201,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":741404,"byte_end":741415,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":741592,"byte_end":741600,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":741776,"byte_end":741785,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":741962,"byte_end":741971,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":742147,"byte_end":742155,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":742331,"byte_end":742341,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":742545,"byte_end":742557,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":742735,"byte_end":742744,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":742921,"byte_end":742931,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":743097,"byte_end":743109,"line_start":187,"line_end":187,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"fn <'a> (decoder: impl ImageDecoder<'a>) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":743287,"byte_end":743293,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"fn (&self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":743462,"byte_end":743469,"line_start":201,"line_end":201,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"fn (&self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":743638,"byte_end":743644,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"fn (&self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":743813,"byte_end":743820,"line_start":215,"line_end":215,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"fn (&self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":743989,"byte_end":743996,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"fn (&self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":744166,"byte_end":744179,"line_start":229,"line_end":229,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"fn (&self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":744471,"byte_end":744479,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"into_rgb","qualname":"<DynamicImage>::into_rgb","value":"fn (self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":744796,"byte_end":744805,"line_start":250,"line_end":250,"column_start":12,"column_end":21},"name":"into_rgba","qualname":"<DynamicImage>::into_rgba","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":745124,"byte_end":745132,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"into_bgr","qualname":"<DynamicImage>::into_bgr","value":"fn (self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":745449,"byte_end":745458,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"into_bgra","qualname":"<DynamicImage>::into_bgra","value":"fn (self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":745778,"byte_end":745787,"line_start":283,"line_end":283,"column_start":12,"column_end":21},"name":"into_luma","qualname":"<DynamicImage>::into_luma","value":"fn (self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":746108,"byte_end":746123,"line_start":294,"line_end":294,"column_start":12,"column_end":27},"name":"into_luma_alpha","qualname":"<DynamicImage>::into_luma_alpha","value":"fn (self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":746505,"byte_end":746509,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":746766,"byte_end":746774,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":746999,"byte_end":747006,"line_start":315,"line_end":315,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn (&self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":747221,"byte_end":747232,"line_start":323,"line_end":323,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn (&mut self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":747451,"byte_end":747458,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"fn (&self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":747673,"byte_end":747684,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"fn (&mut self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":747904,"byte_end":747912,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn (&self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":748130,"byte_end":748142,"line_start":355,"line_end":355,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn (&mut self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":748364,"byte_end":748372,"line_start":363,"line_end":363,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"fn (&self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":748590,"byte_end":748602,"line_start":371,"line_end":371,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"fn (&mut self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":748829,"byte_end":748837,"line_start":379,"line_end":379,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn (&self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":749060,"byte_end":749072,"line_start":387,"line_end":387,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn (&mut self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":749321,"byte_end":749335,"line_start":395,"line_end":395,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn (&self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":749586,"byte_end":749604,"line_start":403,"line_end":403,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn (&mut self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":749832,"byte_end":749840,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"fn (&self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":750059,"byte_end":750071,"line_start":419,"line_end":419,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"fn (&mut self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":750295,"byte_end":750304,"line_start":427,"line_end":427,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"fn (&self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":750526,"byte_end":750539,"line_start":435,"line_end":435,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"fn (&mut self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":750770,"byte_end":750779,"line_start":443,"line_end":443,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"fn (&self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":751006,"byte_end":751019,"line_start":451,"line_end":451,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"fn (&mut self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":751272,"byte_end":751287,"line_start":459,"line_end":459,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"fn (&self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":751542,"byte_end":751561,"line_start":467,"line_end":467,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"fn (&mut self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":751820,"byte_end":751838,"line_start":475,"line_end":475,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"fn (&self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":752472,"byte_end":752491,"line_start":488,"line_end":488,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"fn (&self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":752958,"byte_end":752966,"line_start":499,"line_end":499,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":753074,"byte_end":753079,"line_start":504,"line_end":504,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn (&self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":753883,"byte_end":753892,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":754998,"byte_end":755004,"line_start":537,"line_end":537,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":755368,"byte_end":755374,"line_start":545,"line_end":545,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":755838,"byte_end":755850,"line_start":555,"line_end":555,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3407},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":756541,"byte_end":756550,"line_start":572,"line_end":572,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":757158,"byte_end":757173,"line_start":584,"line_end":584,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":757693,"byte_end":757707,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":758527,"byte_end":758531,"line_start":617,"line_end":617,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn (&self, sigma: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":758909,"byte_end":758918,"line_start":626,"line_end":626,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn (&self, sigma: f32, threshold: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":759127,"byte_end":759136,"line_start":631,"line_end":631,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn (&self, kernel: &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":759546,"byte_end":759561,"line_start":642,"line_end":642,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn (&self, c: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":759861,"byte_end":759869,"line_start":649,"line_end":649,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":760217,"byte_end":760226,"line_start":657,"line_end":657,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":760385,"byte_end":760390,"line_start":662,"line_end":662,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":760536,"byte_end":760541,"line_start":667,"line_end":667,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":760700,"byte_end":760708,"line_start":672,"line_end":672,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":760861,"byte_end":760870,"line_start":677,"line_end":677,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":761024,"byte_end":761033,"line_start":682,"line_end":682,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":761188,"byte_end":761196,"line_start":687,"line_end":687,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"fn <W, F> (&self, w: &mut W, format: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":764702,"byte_end":764706,"line_start":781,"line_end":781,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn <Q> (&self, path: Q) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":765078,"byte_end":765094,"line_start":795,"line_end":795,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":771956,"byte_end":771960,"line_start":973,"line_end":973,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn <P> (path: P) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":772515,"byte_end":772531,"line_start":988,"line_end":988,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"fn <P> (path: P) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":773106,"byte_end":773117,"line_start":1003,"line_end":1003,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3452},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":773771,"byte_end":773794,"line_start":1025,"line_end":1025,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":774357,"byte_end":774373,"line_start":1048,"line_end":1048,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn (buffer: &[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":774855,"byte_end":774883,"line_start":1063,"line_end":1063,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn (buf: &[u8], format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":774830,"byte_end":774847,"line_start":1062,"line_end":1062,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5722},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779606,"byte_end":779609,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5724},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779648,"byte_end":779652,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5726},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779690,"byte_end":779693,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5728},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779732,"byte_end":779736,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5730},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779782,"byte_end":779785,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5732},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779824,"byte_end":779828,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5734},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779866,"byte_end":779869,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5736},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779907,"byte_end":779910,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5738},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779948,"byte_end":779951,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779989,"byte_end":779992,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5742},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780039,"byte_end":780042,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5744},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780085,"byte_end":780093,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5746},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780119,"byte_end":780134,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageFormat::__NonExhaustive","value":"ImageFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":779557,"byte_end":779568,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"ImageFormat::{Png, Jpeg, Gif, WebP, Pnm, Tiff, Tga, Dds, Bmp, Ico, Hdr, Farbfeld, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5722},{"krate":0,"index":5724},{"krate":0,"index":5726},{"krate":0,"index":5728},{"krate":0,"index":5730},{"krate":0,"index":5732},{"krate":0,"index":5734},{"krate":0,"index":5736},{"krate":0,"index":5738},{"krate":0,"index":5740},{"krate":0,"index":5742},{"krate":0,"index":5744},{"krate":0,"index":5746}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780276,"byte_end":780285,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"fn <P> (path: P) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5765},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780735,"byte_end":780738,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780676,"byte_end":780699,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5767},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780829,"byte_end":780833,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780745,"byte_end":780769,"line_start":80,"line_end":80,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5770},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780915,"byte_end":780918,"line_start":86,"line_end":86,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageOutputFormat::Pnm","value":"ImageOutputFormat::Pnm(PNMSubtype)","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780844,"byte_end":780867,"line_start":84,"line_end":84,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5773},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780996,"byte_end":780999,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780937,"byte_end":780960,"line_start":88,"line_end":88,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5775},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781065,"byte_end":781068,"line_start":94,"line_end":94,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageOutputFormat::Ico","value":"ImageOutputFormat::Ico","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781006,"byte_end":781029,"line_start":92,"line_end":92,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5777},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781134,"byte_end":781137,"line_start":98,"line_end":98,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781075,"byte_end":781098,"line_start":96,"line_end":96,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5779},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781213,"byte_end":781221,"line_start":102,"line_end":102,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageOutputFormat::Farbfeld","value":"ImageOutputFormat::Farbfeld","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781144,"byte_end":781172,"line_start":100,"line_end":100,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5781},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781473,"byte_end":781484,"line_start":107,"line_end":107,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5784},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781518,"byte_end":781533,"line_start":110,"line_end":110,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageOutputFormat::__NonExhaustive","value":"ImageOutputFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5764},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780652,"byte_end":780669,"line_start":75,"line_end":75,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"ImageOutputFormat::{Png, Jpeg, Pnm, Gif, Ico, Bmp, Farbfeld, Unsupported, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5765},{"krate":0,"index":5767},{"krate":0,"index":5770},{"krate":0,"index":5773},{"krate":0,"index":5775},{"krate":0,"index":5777},{"krate":0,"index":5779},{"krate":0,"index":5781},{"krate":0,"index":5784}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5798},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":790365,"byte_end":790373,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5800}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":790481,"byte_end":790488,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":790661,"byte_end":790666,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":790776,"byte_end":790785,"line_start":338,"line_end":338,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3512},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":790914,"byte_end":790926,"line_start":344,"line_end":344,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3523}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3514},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":791003,"byte_end":791009,"line_start":346,"line_end":346,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":791099,"byte_end":791109,"line_start":349,"line_end":349,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":791214,"byte_end":791224,"line_start":352,"line_end":352,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"fn (&self) -> ColorType","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":791318,"byte_end":791337,"line_start":355,"line_end":355,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"fn (&self) -> ExtendedColorType","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":791678,"byte_end":791689,"line_start":362,"line_end":362,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"fn (self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":792076,"byte_end":792087,"line_start":370,"line_end":370,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":792424,"byte_end":792438,"line_start":377,"line_end":377,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":793327,"byte_end":793337,"line_start":401,"line_end":401,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn (self, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":793565,"byte_end":793589,"line_start":407,"line_end":407,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"fn <F> (self, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":794612,"byte_end":794627,"line_start":441,"line_end":441,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt<'a>: ImageDecoder<'a> + Sized","parent":null,"children":[{"krate":0,"index":3527},{"krate":0,"index":3529}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":794782,"byte_end":794791,"line_start":443,"line_end":443,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":795733,"byte_end":795756,"line_start":466,"line_end":466,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"fn <F> (&mut self, x: u32, y: u32, width: u32, height: u32, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":795987,"byte_end":796003,"line_start":478,"line_end":478,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":3533}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":796075,"byte_end":796086,"line_start":480,"line_end":480,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"fn (self) -> Frames<'a>","parent":{"krate":0,"index":3531},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":796158,"byte_end":796170,"line_start":484,"line_end":484,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":3535}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":796719,"byte_end":796730,"line_start":495,"line_end":495,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"fn (self, buf: &[u8], width: u32, height: u32, color_type: ColorType) -> ImageResult<()>","parent":{"krate":0,"index":3534},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3536},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":796907,"byte_end":796913,"line_start":505,"line_end":505,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3549},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":797546,"byte_end":797562,"line_start":536,"line_end":536,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":797601,"byte_end":797606,"line_start":538,"line_end":538,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":797840,"byte_end":797854,"line_start":543,"line_end":543,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":797947,"byte_end":797957,"line_start":546,"line_end":546,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":798021,"byte_end":798026,"line_start":549,"line_end":549,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"fn (&self) -> u32","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":798141,"byte_end":798147,"line_start":555,"line_end":555,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"fn (&self) -> u32","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":798274,"byte_end":798280,"line_start":561,"line_end":561,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"fn (&self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":798397,"byte_end":798406,"line_start":564,"line_end":564,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"fn (&self, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":798729,"byte_end":798738,"line_start":576,"line_end":576,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":798925,"byte_end":798941,"line_start":581,"line_end":581,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":799173,"byte_end":799179,"line_start":588,"line_end":588,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"fn (&self) -> Pixels<Self>","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3560},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":799449,"byte_end":799454,"line_start":601,"line_end":601,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"fn (&self) -> &Self::InnerImageView","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":799651,"byte_end":799655,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":799854,"byte_end":799866,"line_start":611,"line_end":611,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":3573}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":800111,"byte_end":800121,"line_start":615,"line_end":615,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":800311,"byte_end":800324,"line_start":622,"line_end":622,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut Self::Pixel","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3565},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":800498,"byte_end":800507,"line_start":629,"line_end":629,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3566},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":800699,"byte_end":800715,"line_start":634,"line_end":634,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":800982,"byte_end":800993,"line_start":641,"line_end":641,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":801441,"byte_end":801450,"line_start":652,"line_end":652,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn <O> (&mut self, other: &O, x: u32, y: u32) -> ImageResult<()>","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":802497,"byte_end":802508,"line_start":680,"line_end":680,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"fn (&mut self, source: Rect, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3572},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":804166,"byte_end":804175,"line_start":716,"line_end":716,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"fn (&mut self) -> &mut Self::InnerImage","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":804370,"byte_end":804379,"line_start":720,"line_end":720,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":3562},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3574},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":804870,"byte_end":804878,"line_start":737,"line_end":737,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3577},{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":805266,"byte_end":805269,"line_start":753,"line_end":753,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"fn (image: I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":805558,"byte_end":805571,"line_start":764,"line_end":764,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3589},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":805805,"byte_end":805813,"line_start":772,"line_end":772,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"fn (&self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818526,"byte_end":818541,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":3622}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818612,"byte_end":818620,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":3621},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818908,"byte_end":818917,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":819439,"byte_end":819450,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":819489,"byte_end":819495,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":3640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":819538,"byte_end":819548,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"fn (n: Self::Larger) -> Self","parent":{"krate":0,"index":3640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820074,"byte_end":820079,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3671},{"krate":0,"index":3673},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3687},{"krate":0,"index":3689},{"krate":0,"index":3690}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820143,"byte_end":820151,"line_start":75,"line_end":75,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820226,"byte_end":820239,"line_start":78,"line_end":78,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820382,"byte_end":820395,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::traits::Pixel::channel_count","value":"fn () -> u8","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use CHANNEL_COUNT associated constant\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820308,"byte_end":820374,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820491,"byte_end":820499,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"fn (&self) -> &[Self::Subpixel]","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820587,"byte_end":820599,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"fn (&mut self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820765,"byte_end":820776,"line_start":93,"line_end":93,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820993,"byte_end":821004,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"color_model","qualname":"::traits::Pixel::color_model","value":"fn () -> &'static str","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use COLOR_MODEL associated constant\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820921,"byte_end":820985,"line_start":96,"line_end":96,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":821108,"byte_end":821118,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::Pixel::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" ColorType for this pixel format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":821258,"byte_end":821268,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"color_type","qualname":"::traits::Pixel::color_type","value":"fn () -> ColorType","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use COLOR_TYPE associated constant\")","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":821187,"byte_end":821250,"line_start":104,"line_end":104,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":821506,"byte_end":821515,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"fn (&self) -> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":821818,"byte_end":821831,"line_start":126,"line_end":126,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"fn (a: Self::Subpixel, b: Self::Subpixel, c: Self::Subpixel, d: Self::Subpixel) -> Self","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":822185,"byte_end":822195,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"fn (slice: &[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":822475,"byte_end":822489,"line_start":143,"line_end":143,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"fn (slice: &mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":822576,"byte_end":822582,"line_start":146,"line_end":146,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"fn (&self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":822678,"byte_end":822685,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"fn (&self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":822761,"byte_end":822768,"line_start":152,"line_end":152,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"fn (&self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":822866,"byte_end":822879,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"fn (&self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3667},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":822955,"byte_end":822961,"line_start":158,"line_end":158,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::traits::Pixel::to_bgr","value":"fn (&self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":823057,"byte_end":823064,"line_start":161,"line_end":161,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::traits::Pixel::to_bgra","value":"fn (&self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":823171,"byte_end":823174,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":823335,"byte_end":823340,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":823565,"byte_end":823579,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"fn <F, G> (&self, f: F, g: G) -> Self","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":823885,"byte_end":823901,"line_start":182,"line_end":182,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"fn <F, G> (&mut self, f: F, g: G) -> ()","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":824130,"byte_end":824147,"line_start":188,"line_end":188,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":824439,"byte_end":824458,"line_start":199,"line_end":199,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3685},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":824701,"byte_end":824705,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"fn <F> (&self, other: &Self, f: F) -> Self","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":824945,"byte_end":824951,"line_start":214,"line_end":214,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"fn <F> (&mut self, other: &Self, f: F) -> ()","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":825098,"byte_end":825104,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":825215,"byte_end":825220,"line_start":222,"line_end":222,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"fn (&mut self, other: &Self) -> ()","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3692},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":825329,"byte_end":825344,"line_start":227,"line_end":227,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5813},"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\utils\\mod.rs","byte_start":828767,"byte_end":828786,"line_start":89,"line_end":89,"column_start":12,"column_end":31},"name":"NonExhaustiveMarker","qualname":"::utils::NonExhaustiveMarker","value":"NonExhaustiveMarker {  }","parent":null,"children":[{"krate":0,"index":5814}],"decl_id":null,"docs":" A marker struct for __NonExhaustive enums.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15915,"byte_end":15931,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":16629,"byte_end":16642,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":17418,"byte_end":17431,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18208,"byte_end":18222,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18601,"byte_end":18611,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18968,"byte_end":18978,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19094,"byte_end":19109,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19238,"byte_end":19253,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19503,"byte_end":19519,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19822,"byte_end":19832,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":20293,"byte_end":20303,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":20756,"byte_end":20772,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":22394,"byte_end":22410,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":22438,"byte_end":22452,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":23487,"byte_end":23501,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":23706,"byte_end":23719,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":24180,"byte_end":24193,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":24398,"byte_end":24411,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":24858,"byte_end":24871,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":25076,"byte_end":25086,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":25469,"byte_end":25479,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":25507,"byte_end":25522,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":28966,"byte_end":28974,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":67749,"byte_end":67756,"line_start":195,"line_end":195,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":68200,"byte_end":68208,"line_start":216,"line_end":216,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":83167,"byte_end":83179,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":102065,"byte_end":102071,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":103432,"byte_end":103438,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":104203,"byte_end":104209,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\free_functions.rs","byte_start":118534,"byte_end":118544,"line_start":287,"line_end":287,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":122600,"byte_end":122612,"line_start":110,"line_end":110,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":135207,"byte_end":135210,"line_start":423,"line_end":423,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":135468,"byte_end":135479,"line_start":438,"line_end":438,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":157211,"byte_end":157215,"line_start":973,"line_end":973,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":162800,"byte_end":162807,"line_start":1106,"line_end":1106,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":167183,"byte_end":167194,"line_start":1220,"line_end":1220,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":167803,"byte_end":167814,"line_start":1239,"line_end":1239,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":168418,"byte_end":168422,"line_start":1257,"line_end":1257,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":169669,"byte_end":169676,"line_start":1302,"line_end":1302,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":170943,"byte_end":170950,"line_start":1347,"line_end":1347,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":171845,"byte_end":171855,"line_start":1376,"line_end":1376,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":172007,"byte_end":172030,"line_start":1380,"line_end":1380,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":172238,"byte_end":172261,"line_start":1385,"line_end":1385,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":172833,"byte_end":172843,"line_start":1399,"line_end":1399,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":181646,"byte_end":181657,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":183580,"byte_end":183592,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":185663,"byte_end":185673,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":185829,"byte_end":185841,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":186188,"byte_end":186205,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":194862,"byte_end":194870,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":196256,"byte_end":196265,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":197530,"byte_end":197545,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":199401,"byte_end":199411,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":231315,"byte_end":231324,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":231744,"byte_end":231754,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":232429,"byte_end":232439,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\encoder.rs","byte_start":233960,"byte_end":233970,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\encoder.rs","byte_start":241090,"byte_end":241100,"line_start":214,"line_end":214,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":246284,"byte_end":246296,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":246936,"byte_end":246946,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":247102,"byte_end":247114,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":247583,"byte_end":247594,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":248318,"byte_end":248324,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":250000,"byte_end":250010,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":251502,"byte_end":251512,"line_start":198,"line_end":198,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":253313,"byte_end":253323,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":254280,"byte_end":254290,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":256042,"byte_end":256052,"line_start":117,"line_end":117,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":256949,"byte_end":256959,"line_start":149,"line_end":149,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":257933,"byte_end":257942,"line_start":179,"line_end":179,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":258202,"byte_end":258212,"line_start":191,"line_end":191,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":282062,"byte_end":282072,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":282524,"byte_end":282533,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":282946,"byte_end":282956,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":285903,"byte_end":285919,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":286531,"byte_end":286547,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":291253,"byte_end":291263,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":291526,"byte_end":291533,"line_start":298,"line_end":298,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":295530,"byte_end":295540,"line_start":408,"line_end":408,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":297829,"byte_end":297841,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":299491,"byte_end":299501,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":299657,"byte_end":299669,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":300171,"byte_end":300179,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":300773,"byte_end":300783,"line_start":124,"line_end":124,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":302154,"byte_end":302163,"line_start":166,"line_end":166,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":302579,"byte_end":302589,"line_start":180,"line_end":180,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":303097,"byte_end":303107,"line_start":200,"line_end":200,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":304143,"byte_end":304153,"line_start":243,"line_end":243,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":306459,"byte_end":306469,"line_start":308,"line_end":308,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1312},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":312149,"byte_end":312159,"line_start":461,"line_end":461,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":313059,"byte_end":313082,"line_start":489,"line_end":489,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":313375,"byte_end":313398,"line_start":502,"line_end":502,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":315206,"byte_end":315229,"line_start":553,"line_end":553,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":321680,"byte_end":321691,"line_start":729,"line_end":729,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":331624,"byte_end":331634,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":334196,"byte_end":334207,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":334333,"byte_end":334344,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":335045,"byte_end":335065,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":335324,"byte_end":335344,"line_start":134,"line_end":134,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":349030,"byte_end":349042,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":350169,"byte_end":350179,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":350335,"byte_end":350347,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":350588,"byte_end":350607,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":350847,"byte_end":350866,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":351505,"byte_end":351515,"line_start":129,"line_end":129,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":353812,"byte_end":353820,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":355133,"byte_end":355142,"line_start":249,"line_end":249,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":355562,"byte_end":355572,"line_start":263,"line_end":263,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\encoder.rs","byte_start":360695,"byte_end":360705,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\encoder.rs","byte_start":361699,"byte_end":361709,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":364287,"byte_end":364298,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":365007,"byte_end":365017,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":365430,"byte_end":365441,"line_start":54,"line_end":54,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":367187,"byte_end":367196,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":367454,"byte_end":367464,"line_start":125,"line_end":125,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":393586,"byte_end":393595,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":397104,"byte_end":397116,"line_start":305,"line_end":305,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":397454,"byte_end":397466,"line_start":317,"line_end":317,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":398042,"byte_end":398053,"line_start":342,"line_end":342,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":407947,"byte_end":407958,"line_start":644,"line_end":644,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":426522,"byte_end":426531,"line_start":29,"line_end":29,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":427289,"byte_end":427298,"line_start":53,"line_end":53,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":428553,"byte_end":428563,"line_start":99,"line_end":99,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":432060,"byte_end":432070,"line_start":164,"line_end":164,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":433481,"byte_end":433491,"line_start":211,"line_end":211,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":435118,"byte_end":435128,"line_start":244,"line_end":244,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":436363,"byte_end":436373,"line_start":276,"line_end":276,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\autobreak.rs","byte_start":444452,"byte_end":444461,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\autobreak.rs","byte_start":445722,"byte_end":445731,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\autobreak.rs","byte_start":446357,"byte_end":446366,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":450216,"byte_end":450228,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":453057,"byte_end":453067,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":453223,"byte_end":453235,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":453711,"byte_end":453724,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":454316,"byte_end":454331,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":455483,"byte_end":455493,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":466169,"byte_end":466178,"line_start":511,"line_end":511,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":466307,"byte_end":466316,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1980},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":466729,"byte_end":466739,"line_start":529,"line_end":529,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":468446,"byte_end":468456,"line_start":576,"line_end":576,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":470883,"byte_end":470885,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":471550,"byte_end":471553,"line_start":669,"line_end":669,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":472825,"byte_end":472831,"line_start":708,"line_end":708,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":474451,"byte_end":474456,"line_start":762,"line_end":762,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":475306,"byte_end":475318,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":475443,"byte_end":475456,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":475772,"byte_end":475784,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":476094,"byte_end":476109,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":493491,"byte_end":493501,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":501278,"byte_end":501288,"line_start":284,"line_end":284,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":501521,"byte_end":501539,"line_start":296,"line_end":296,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":502409,"byte_end":502424,"line_start":324,"line_end":324,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":502985,"byte_end":503002,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":507022,"byte_end":507040,"line_start":439,"line_end":439,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":509605,"byte_end":509618,"line_start":506,"line_end":506,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":509929,"byte_end":509941,"line_start":519,"line_end":519,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":511358,"byte_end":511369,"line_start":564,"line_end":564,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":513080,"byte_end":513091,"line_start":618,"line_end":618,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":513210,"byte_end":513221,"line_start":624,"line_end":624,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":513322,"byte_end":513335,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518260,"byte_end":518277,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518789,"byte_end":518799,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":519769,"byte_end":519778,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":524452,"byte_end":524466,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":525065,"byte_end":525074,"line_start":316,"line_end":316,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":525267,"byte_end":525276,"line_start":325,"line_end":325,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":525470,"byte_end":525479,"line_start":334,"line_end":334,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":525674,"byte_end":525683,"line_start":343,"line_end":343,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":526722,"byte_end":526731,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":528576,"byte_end":528582,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":529851,"byte_end":529859,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":530976,"byte_end":530986,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":541921,"byte_end":541931,"line_start":479,"line_end":479,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":543630,"byte_end":543639,"line_start":535,"line_end":535,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":544803,"byte_end":544814,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":546483,"byte_end":546493,"line_start":77,"line_end":77,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":548172,"byte_end":548182,"line_start":117,"line_end":117,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":548602,"byte_end":548613,"line_start":131,"line_end":131,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":550410,"byte_end":550421,"line_start":192,"line_end":192,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":552096,"byte_end":552107,"line_start":226,"line_end":226,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":553171,"byte_end":553183,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":553320,"byte_end":553335,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":553922,"byte_end":553932,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":554089,"byte_end":554101,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":554327,"byte_end":554338,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":557211,"byte_end":557221,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":557634,"byte_end":557645,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":587233,"byte_end":587245,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":588264,"byte_end":588274,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":588431,"byte_end":588443,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":588564,"byte_end":588574,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":592907,"byte_end":592917,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2621},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":614256,"byte_end":614264,"line_start":1578,"line_end":1578,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":614881,"byte_end":614889,"line_start":1601,"line_end":1601,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":614954,"byte_end":614964,"line_start":1607,"line_end":1607,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":615253,"byte_end":615263,"line_start":1619,"line_end":1619,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":615330,"byte_end":615339,"line_start":1625,"line_end":1625,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":615876,"byte_end":615885,"line_start":1643,"line_end":1643,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":639412,"byte_end":639426,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":640593,"byte_end":640607,"line_start":76,"line_end":76,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":641386,"byte_end":641400,"line_start":102,"line_end":102,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":644006,"byte_end":644021,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2740}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":644269,"byte_end":644284,"line_start":174,"line_end":174,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":644695,"byte_end":644710,"line_start":194,"line_end":194,"column_start":55,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":645518,"byte_end":645533,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":646654,"byte_end":646669,"line_start":255,"line_end":255,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":650509,"byte_end":650515,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651105,"byte_end":651111,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2785},{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651630,"byte_end":651635,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":652584,"byte_end":652589,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":658625,"byte_end":658633,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662065,"byte_end":662071,"line_start":25,"line_end":25,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662315,"byte_end":662321,"line_start":37,"line_end":37,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662470,"byte_end":662476,"line_start":46,"line_end":46,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662846,"byte_end":662855,"line_start":64,"line_end":64,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":663111,"byte_end":663120,"line_start":76,"line_end":76,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":663269,"byte_end":663278,"line_start":85,"line_end":85,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":663682,"byte_end":663686,"line_start":105,"line_end":105,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664009,"byte_end":664013,"line_start":119,"line_end":119,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664162,"byte_end":664166,"line_start":128,"line_end":128,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2902}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664621,"byte_end":664628,"line_start":148,"line_end":148,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664964,"byte_end":664971,"line_start":162,"line_end":162,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":665120,"byte_end":665127,"line_start":171,"line_end":171,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":665623,"byte_end":665638,"line_start":194,"line_end":194,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":666041,"byte_end":666056,"line_start":212,"line_end":212,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":666368,"byte_end":666381,"line_start":231,"line_end":231,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2949},{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":666919,"byte_end":666932,"line_start":255,"line_end":255,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":667268,"byte_end":667286,"line_start":275,"line_end":275,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":667697,"byte_end":667715,"line_start":293,"line_end":293,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":668033,"byte_end":668049,"line_start":312,"line_end":312,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2982},{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":668596,"byte_end":668612,"line_start":336,"line_end":336,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2988}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":670682,"byte_end":670693,"line_start":406,"line_end":406,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":676334,"byte_end":676345,"line_start":573,"line_end":573,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":678515,"byte_end":678526,"line_start":642,"line_end":642,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3024}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":679178,"byte_end":679189,"line_start":667,"line_end":667,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":679932,"byte_end":679943,"line_start":694,"line_end":694,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":680207,"byte_end":680218,"line_start":707,"line_end":707,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":680484,"byte_end":680495,"line_start":718,"line_end":718,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3043},{"krate":0,"index":3044}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":680766,"byte_end":680777,"line_start":731,"line_end":731,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":681038,"byte_end":681049,"line_start":742,"line_end":742,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":681408,"byte_end":681419,"line_start":757,"line_end":757,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":682243,"byte_end":682254,"line_start":790,"line_end":790,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":685839,"byte_end":685850,"line_start":882,"line_end":882,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":688284,"byte_end":688293,"line_start":960,"line_end":960,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":689691,"byte_end":689702,"line_start":998,"line_end":998,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":3095}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698642,"byte_end":698651,"line_start":36,"line_end":36,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700980,"byte_end":700997,"line_start":115,"line_end":115,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":702285,"byte_end":702302,"line_start":149,"line_end":149,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":708398,"byte_end":708399,"line_start":355,"line_end":355,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":708837,"byte_end":708838,"line_start":369,"line_end":369,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":710094,"byte_end":710098,"line_start":413,"line_end":413,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":710327,"byte_end":710331,"line_start":421,"line_end":421,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3154}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":710559,"byte_end":710563,"line_start":429,"line_end":429,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":710788,"byte_end":710792,"line_start":437,"line_end":437,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711019,"byte_end":711023,"line_start":445,"line_end":445,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711171,"byte_end":711175,"line_start":452,"line_end":452,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3165}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711419,"byte_end":711423,"line_start":461,"line_end":461,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711667,"byte_end":711671,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711857,"byte_end":711861,"line_start":477,"line_end":477,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":712047,"byte_end":712051,"line_start":484,"line_end":484,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":712288,"byte_end":712293,"line_start":494,"line_end":494,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":712555,"byte_end":712560,"line_start":503,"line_end":503,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":712821,"byte_end":712826,"line_start":512,"line_end":512,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":713091,"byte_end":713096,"line_start":521,"line_end":521,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":713362,"byte_end":713367,"line_start":530,"line_end":530,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":713580,"byte_end":713585,"line_start":538,"line_end":538,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":713885,"byte_end":713890,"line_start":548,"line_end":548,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":714233,"byte_end":714237,"line_start":561,"line_end":561,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":714538,"byte_end":714542,"line_start":572,"line_end":572,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3198}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":714844,"byte_end":714848,"line_start":583,"line_end":583,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":715149,"byte_end":715153,"line_start":594,"line_end":594,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":715454,"byte_end":715458,"line_start":605,"line_end":605,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":715735,"byte_end":715739,"line_start":616,"line_end":616,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":716101,"byte_end":716105,"line_start":627,"line_end":627,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":716502,"byte_end":716506,"line_start":641,"line_end":641,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":716807,"byte_end":716811,"line_start":652,"line_end":652,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":717113,"byte_end":717117,"line_start":663,"line_end":663,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":717418,"byte_end":717422,"line_start":674,"line_end":674,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3223}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":717723,"byte_end":717727,"line_start":685,"line_end":685,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":718051,"byte_end":718054,"line_start":699,"line_end":699,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":718323,"byte_end":718326,"line_start":709,"line_end":709,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3232}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":718594,"byte_end":718597,"line_start":719,"line_end":719,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":718862,"byte_end":718865,"line_start":729,"line_end":729,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":719129,"byte_end":719132,"line_start":739,"line_end":739,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":719370,"byte_end":719373,"line_start":749,"line_end":749,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3243}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":719598,"byte_end":719601,"line_start":757,"line_end":757,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":719874,"byte_end":719877,"line_start":768,"line_end":768,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":720145,"byte_end":720148,"line_start":778,"line_end":778,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":720413,"byte_end":720416,"line_start":789,"line_end":789,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":720686,"byte_end":720689,"line_start":799,"line_end":799,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3257}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":720953,"byte_end":720956,"line_start":809,"line_end":809,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":722622,"byte_end":722627,"line_start":863,"line_end":863,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3266}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":723632,"byte_end":723636,"line_start":896,"line_end":896,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":723746,"byte_end":723750,"line_start":902,"line_end":902,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":725958,"byte_end":725962,"line_start":960,"line_end":960,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3275}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728168,"byte_end":728171,"line_start":1016,"line_end":1016,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728280,"byte_end":728283,"line_start":1022,"line_end":1022,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728502,"byte_end":728507,"line_start":1035,"line_end":1035,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3286}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728680,"byte_end":728684,"line_start":1044,"line_end":1044,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728872,"byte_end":728876,"line_start":1055,"line_end":1055,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":729089,"byte_end":729093,"line_start":1066,"line_end":1066,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":729306,"byte_end":729309,"line_start":1077,"line_end":1077,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":729571,"byte_end":729574,"line_start":1091,"line_end":1091,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":741099,"byte_end":741111,"line_start":133,"line_end":133,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3424},{"krate":0,"index":3426}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":765345,"byte_end":765357,"line_start":806,"line_end":806,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":765890,"byte_end":765902,"line_start":828,"line_end":828,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780179,"byte_end":780190,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781600,"byte_end":781617,"line_start":113,"line_end":113,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":782756,"byte_end":782771,"line_start":146,"line_end":146,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":790418,"byte_end":790426,"line_start":324,"line_end":324,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":797057,"byte_end":797063,"line_start":513,"line_end":513,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3547},{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":805208,"byte_end":805216,"line_start":751,"line_end":751,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3589}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":806353,"byte_end":806361,"line_start":792,"line_end":792,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":807182,"byte_end":807190,"line_start":824,"line_end":824,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":6791,"byte_end":6796,"line_start":159,"line_end":159,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":54}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7189,"byte_end":7193,"line_start":178,"line_end":178,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":127}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\mod.rs","byte_start":26456,"byte_end":26458,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\mod.rs","byte_start":26468,"byte_end":26473,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":166}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7234,"byte_end":7242,"line_start":181,"line_end":181,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":171}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\mod.rs","byte_start":42556,"byte_end":42564,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":256}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7268,"byte_end":7270,"line_start":184,"line_end":184,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":417}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7316,"byte_end":7320,"line_start":187,"line_end":187,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":522}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7371,"byte_end":7374,"line_start":191,"line_end":191,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":691}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7408,"byte_end":7411,"line_start":193,"line_end":193,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":941}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7445,"byte_end":7448,"line_start":195,"line_end":195,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":994}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7482,"byte_end":7485,"line_start":197,"line_end":197,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1111}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7519,"byte_end":7522,"line_start":199,"line_end":199,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1212}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7556,"byte_end":7559,"line_start":201,"line_end":201,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1436}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7594,"byte_end":7598,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1560}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7632,"byte_end":7635,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1755}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7669,"byte_end":7672,"line_start":207,"line_end":207,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1832}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7706,"byte_end":7709,"line_start":209,"line_end":209,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2220}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7744,"byte_end":7748,"line_start":211,"line_end":211,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2329}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7783,"byte_end":7787,"line_start":213,"line_end":213,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2403}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\mod.rs","byte_start":552430,"byte_end":552433,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2482}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src/lib.rs","byte_start":7826,"byte_end":7834,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2675}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":15915,"byte_end":15931,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":16629,"byte_end":16642,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":17418,"byte_end":17431,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18208,"byte_end":18222,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18601,"byte_end":18611,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":18968,"byte_end":18978,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19094,"byte_end":19109,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3825},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19238,"byte_end":19253,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3825},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19503,"byte_end":19519,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":19822,"byte_end":19832,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":20293,"byte_end":20303,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3710},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":20756,"byte_end":20772,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":22394,"byte_end":22410,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3731},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":22438,"byte_end":22452,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3765},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":23487,"byte_end":23501,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3765},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":23706,"byte_end":23719,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3760},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":24180,"byte_end":24193,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3760},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":24398,"byte_end":24411,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3794},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":24858,"byte_end":24871,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3794},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":25076,"byte_end":25086,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":25469,"byte_end":25479,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3799},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\error.rs","byte_start":25507,"byte_end":25522,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3825},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\math\\nq.rs","byte_start":28966,"byte_end":28974,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":67749,"byte_end":67756,"line_start":195,"line_end":195,"column_start":19,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3882},"to":{"krate":0,"index":295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\colorops.rs","byte_start":68200,"byte_end":68208,"line_start":216,"line_end":216,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":144},"to":{"krate":0,"index":295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\imageops\\sample.rs","byte_start":83167,"byte_end":83179,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":102065,"byte_end":102071,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":103432,"byte_end":103438,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\reader.rs","byte_start":104203,"byte_end":104209,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\io\\free_functions.rs","byte_start":118534,"byte_end":118544,"line_start":287,"line_end":287,"column_start":26,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":122600,"byte_end":122612,"line_start":110,"line_end":110,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":135207,"byte_end":135210,"line_start":423,"line_end":423,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":135468,"byte_end":135479,"line_start":438,"line_end":438,"column_start":14,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":157211,"byte_end":157215,"line_start":973,"line_end":973,"column_start":24,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":162800,"byte_end":162807,"line_start":1106,"line_end":1106,"column_start":24,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":167183,"byte_end":167194,"line_start":1220,"line_end":1220,"column_start":40,"column_end":51},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3903},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":167803,"byte_end":167814,"line_start":1239,"line_end":1239,"column_start":43,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3903},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":168418,"byte_end":168422,"line_start":1257,"line_end":1257,"column_start":45,"column_end":49},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3964},"to":{"krate":0,"index":3549}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":169669,"byte_end":169676,"line_start":1302,"line_end":1302,"column_start":45,"column_end":52},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3977},"to":{"krate":0,"index":3549}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":170943,"byte_end":170950,"line_start":1347,"line_end":1347,"column_start":41,"column_end":48},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3977},"to":{"krate":0,"index":3562}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":171845,"byte_end":171855,"line_start":1376,"line_end":1376,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":172007,"byte_end":172030,"line_start":1380,"line_end":1380,"column_start":31,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":172238,"byte_end":172261,"line_start":1385,"line_end":1385,"column_start":31,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4039},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\flat.rs","byte_start":172833,"byte_end":172843,"line_start":1399,"line_end":1399,"column_start":21,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4014},"to":{"krate":2,"index":2077}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":181646,"byte_end":181657,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":760},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":183580,"byte_end":183592,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4097},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":185663,"byte_end":185673,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":185829,"byte_end":185841,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4097},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":186188,"byte_end":186205,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4174},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":194862,"byte_end":194870,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":196256,"byte_end":196265,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":197530,"byte_end":197545,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":833},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":199401,"byte_end":199411,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":231315,"byte_end":231324,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":878},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":231744,"byte_end":231754,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":800},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\decoder.rs","byte_start":232429,"byte_end":232439,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":800},"to":{"krate":0,"index":3525}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\encoder.rs","byte_start":233960,"byte_end":233970,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\bmp\\encoder.rs","byte_start":241090,"byte_end":241100,"line_start":214,"line_end":214,"column_start":37,"column_end":47},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":919},"to":{"krate":0,"index":3534}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":246284,"byte_end":246296,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4227},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":246936,"byte_end":246946,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":247102,"byte_end":247114,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4227},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":247583,"byte_end":247594,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":248318,"byte_end":248324,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":250000,"byte_end":250010,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dds.rs","byte_start":251502,"byte_end":251512,"line_start":198,"line_end":198,"column_start":45,"column_end":55},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":978},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":253313,"byte_end":253323,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":254280,"byte_end":254290,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":256042,"byte_end":256052,"line_start":117,"line_end":117,"column_start":45,"column_end":55},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1018},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":256949,"byte_end":256959,"line_start":149,"line_end":149,"column_start":55,"column_end":65},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1018},"to":{"krate":0,"index":3525}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":257933,"byte_end":257942,"line_start":179,"line_end":179,"column_start":24,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1046},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dxt.rs","byte_start":258202,"byte_end":258212,"line_start":191,"line_end":191,"column_start":16,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":282062,"byte_end":282072,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":282524,"byte_end":282533,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1153},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":282946,"byte_end":282956,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1147},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":285903,"byte_end":285919,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":286531,"byte_end":286547,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":291253,"byte_end":291263,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1147},"to":{"krate":0,"index":3531}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":291526,"byte_end":291533,"line_start":298,"line_end":298,"column_start":16,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\gif.rs","byte_start":295530,"byte_end":295540,"line_start":408,"line_end":408,"column_start":6,"column_end":16},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":297829,"byte_end":297841,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4303},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":299491,"byte_end":299501,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":299657,"byte_end":299669,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4303},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":300171,"byte_end":300179,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4347},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":300773,"byte_end":300783,"line_start":124,"line_end":124,"column_start":18,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":302154,"byte_end":302163,"line_start":166,"line_end":166,"column_start":18,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":302579,"byte_end":302589,"line_start":180,"line_end":180,"column_start":48,"column_end":58},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4376},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":303097,"byte_end":303107,"line_start":200,"line_end":200,"column_start":58,"column_end":68},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4376},"to":{"krate":0,"index":3525}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":304143,"byte_end":304153,"line_start":243,"line_end":243,"column_start":6,"column_end":16},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":306459,"byte_end":306469,"line_start":308,"line_end":308,"column_start":18,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":312149,"byte_end":312159,"line_start":461,"line_end":461,"column_start":35,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4383},"to":{"krate":2,"index":3951}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":313059,"byte_end":313082,"line_start":489,"line_end":489,"column_start":18,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":313375,"byte_end":313398,"line_start":502,"line_end":502,"column_start":31,"column_end":54},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1321},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":315206,"byte_end":315229,"line_start":553,"line_end":553,"column_start":40,"column_end":63},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1321},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\decoder.rs","byte_start":321680,"byte_end":321691,"line_start":729,"line_end":729,"column_start":6,"column_end":17},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":331624,"byte_end":331634,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":334196,"byte_end":334207,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":334333,"byte_end":334344,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":335045,"byte_end":335065,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\hdr\\encoder.rs","byte_start":335324,"byte_end":335344,"line_start":134,"line_end":134,"column_start":23,"column_end":43},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1418},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":349030,"byte_end":349042,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4442},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":350169,"byte_end":350179,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":350335,"byte_end":350347,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4442},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":350588,"byte_end":350607,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":350847,"byte_end":350866,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":351505,"byte_end":351515,"line_start":129,"line_end":129,"column_start":22,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":353812,"byte_end":353820,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":355133,"byte_end":355142,"line_start":249,"line_end":249,"column_start":18,"column_end":27},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1513},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\decoder.rs","byte_start":355562,"byte_end":355572,"line_start":263,"line_end":263,"column_start":52,"column_end":62},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1480},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\encoder.rs","byte_start":360695,"byte_end":360705,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\ico\\encoder.rs","byte_start":361699,"byte_end":361709,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1544},"to":{"krate":0,"index":3534}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":364287,"byte_end":364298,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":365007,"byte_end":365017,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1591},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":365430,"byte_end":365441,"line_start":54,"line_end":54,"column_start":45,"column_end":56},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1584},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":367187,"byte_end":367196,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\decoder.rs","byte_start":367454,"byte_end":367464,"line_start":125,"line_end":125,"column_start":6,"column_end":16},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":393586,"byte_end":393595,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":397104,"byte_end":397116,"line_start":305,"line_end":305,"column_start":6,"column_end":18},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":397454,"byte_end":397466,"line_start":317,"line_end":317,"column_start":18,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4562},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":398042,"byte_end":398053,"line_start":342,"line_end":342,"column_start":20,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\jpeg\\encoder.rs","byte_start":407947,"byte_end":407958,"line_start":644,"line_end":644,"column_start":37,"column_end":48},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1687},"to":{"krate":0,"index":3534}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":426522,"byte_end":426531,"line_start":29,"line_end":29,"column_start":15,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":427289,"byte_end":427298,"line_start":53,"line_end":53,"column_start":24,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1778},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":428553,"byte_end":428563,"line_start":99,"line_end":99,"column_start":15,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":432060,"byte_end":432070,"line_start":164,"line_end":164,"column_start":45,"column_end":55},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1790},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":433481,"byte_end":433491,"line_start":211,"line_end":211,"column_start":16,"column_end":26},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":435118,"byte_end":435128,"line_start":244,"line_end":244,"column_start":33,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1812},"to":{"krate":0,"index":3534}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\png.rs","byte_start":436363,"byte_end":436373,"line_start":276,"line_end":276,"column_start":6,"column_end":16},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\autobreak.rs","byte_start":444452,"byte_end":444461,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\autobreak.rs","byte_start":445722,"byte_end":445731,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1849},"to":{"krate":1,"index":2903}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\autobreak.rs","byte_start":446357,"byte_end":446366,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1849},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":450216,"byte_end":450228,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4577},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":453057,"byte_end":453067,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":453223,"byte_end":453235,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4577},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":453711,"byte_end":453724,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":454316,"byte_end":454331,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4661},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":455483,"byte_end":455493,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":458645,"byte_end":458652,"line_start":317,"line_end":317,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2925},"to":{"krate":0,"index":1951}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":466169,"byte_end":466178,"line_start":511,"line_end":511,"column_start":32,"column_end":41},"kind":{"Impl":{"id":136}},"from":{"krate":1,"index":2305},"to":{"krate":0,"index":1951}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":466307,"byte_end":466316,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1973},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":466729,"byte_end":466739,"line_start":529,"line_end":529,"column_start":45,"column_end":55},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":468446,"byte_end":468456,"line_start":576,"line_end":576,"column_start":15,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":470883,"byte_end":470885,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1928},"to":{"krate":0,"index":1924}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":471550,"byte_end":471553,"line_start":669,"line_end":669,"column_start":17,"column_end":20},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1930},"to":{"krate":0,"index":1924}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":472825,"byte_end":472831,"line_start":708,"line_end":708,"column_start":17,"column_end":23},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1932},"to":{"krate":0,"index":1924}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":474451,"byte_end":474456,"line_start":762,"line_end":762,"column_start":17,"column_end":22},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1934},"to":{"krate":0,"index":1924}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":475306,"byte_end":475318,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4761},"to":{"krate":0,"index":1936}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":475443,"byte_end":475456,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4770},"to":{"krate":0,"index":1936}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":475772,"byte_end":475784,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4780},"to":{"krate":0,"index":1936}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\decoder.rs","byte_start":476094,"byte_end":476109,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4790},"to":{"krate":0,"index":1936}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":493491,"byte_end":493501,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":501278,"byte_end":501288,"line_start":284,"line_end":284,"column_start":33,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2074},"to":{"krate":0,"index":3534}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":501521,"byte_end":501539,"line_start":296,"line_end":296,"column_start":10,"column_end":28},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":502409,"byte_end":502424,"line_start":324,"line_end":324,"column_start":10,"column_end":25},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":502985,"byte_end":503002,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":507022,"byte_end":507040,"line_start":439,"line_end":439,"column_start":10,"column_end":28},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":509605,"byte_end":509618,"line_start":506,"line_end":506,"column_start":10,"column_end":23},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":509929,"byte_end":509941,"line_start":519,"line_end":519,"column_start":10,"column_end":22},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":511358,"byte_end":511369,"line_start":564,"line_end":564,"column_start":10,"column_end":21},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":513080,"byte_end":513091,"line_start":618,"line_end":618,"column_start":29,"column_end":40},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4708},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":513210,"byte_end":513221,"line_start":624,"line_end":624,"column_start":30,"column_end":41},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4708},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\encoder.rs","byte_start":513322,"byte_end":513335,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518260,"byte_end":518277,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":518789,"byte_end":518799,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":519769,"byte_end":519778,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":524452,"byte_end":524466,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2205},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":525065,"byte_end":525074,"line_start":316,"line_end":316,"column_start":29,"column_end":38},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2173},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":525267,"byte_end":525276,"line_start":325,"line_end":325,"column_start":30,"column_end":39},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2173},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":525470,"byte_end":525479,"line_start":334,"line_end":334,"column_start":29,"column_end":38},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2173},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\pnm\\header.rs","byte_start":525674,"byte_end":525683,"line_start":343,"line_end":343,"column_start":32,"column_end":41},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2173},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":526722,"byte_end":526731,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":528576,"byte_end":528582,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":529851,"byte_end":529859,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":530976,"byte_end":530986,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":541921,"byte_end":541931,"line_start":479,"line_end":479,"column_start":52,"column_end":62},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2282},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tga\\decoder.rs","byte_start":543630,"byte_end":543639,"line_start":535,"line_end":535,"column_start":31,"column_end":40},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2321},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":544803,"byte_end":544814,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":546483,"byte_end":546493,"line_start":77,"line_end":77,"column_start":6,"column_end":16},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":548172,"byte_end":548182,"line_start":117,"line_end":117,"column_start":18,"column_end":28},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2374},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":548602,"byte_end":548613,"line_start":131,"line_end":131,"column_start":52,"column_end":63},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2362},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":550410,"byte_end":550421,"line_start":192,"line_end":192,"column_start":23,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\tiff.rs","byte_start":552096,"byte_end":552107,"line_start":226,"line_end":226,"column_start":40,"column_end":51},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2391},"to":{"krate":0,"index":3534}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":553171,"byte_end":553183,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4835},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":553320,"byte_end":553335,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2434},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":553922,"byte_end":553932,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":554089,"byte_end":554101,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4835},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":554327,"byte_end":554338,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":557211,"byte_end":557221,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2459},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\decoder.rs","byte_start":557634,"byte_end":557645,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2443},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":587233,"byte_end":587245,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4948},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":588264,"byte_end":588274,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":588431,"byte_end":588443,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4948},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":588564,"byte_end":588574,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":592907,"byte_end":592917,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":614256,"byte_end":614264,"line_start":1578,"line_end":1578,"column_start":6,"column_end":14},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":614881,"byte_end":614889,"line_start":1601,"line_end":1601,"column_start":18,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4851},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":614954,"byte_end":614964,"line_start":1607,"line_end":1607,"column_start":6,"column_end":16},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":615253,"byte_end":615263,"line_start":1619,"line_end":1619,"column_start":18,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4878},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":615330,"byte_end":615339,"line_start":1625,"line_end":1625,"column_start":6,"column_end":15},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\webp\\vp8.rs","byte_start":615876,"byte_end":615885,"line_start":1643,"line_end":1643,"column_start":18,"column_end":27},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4902},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":639412,"byte_end":639426,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":640593,"byte_end":640607,"line_start":76,"line_end":76,"column_start":24,"column_end":38},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2705},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":641386,"byte_end":641400,"line_start":102,"line_end":102,"column_start":31,"column_end":45},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2705},"to":{"krate":1,"index":2919}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":644006,"byte_end":644021,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":644269,"byte_end":644284,"line_start":174,"line_end":174,"column_start":45,"column_end":60},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2735},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":644695,"byte_end":644710,"line_start":194,"line_end":194,"column_start":55,"column_end":70},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2735},"to":{"krate":0,"index":3525}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":645518,"byte_end":645533,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\farbfeld.rs","byte_start":646654,"byte_end":646669,"line_start":255,"line_end":255,"column_start":33,"column_end":48},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2757},"to":{"krate":0,"index":3534}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":650509,"byte_end":650515,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651105,"byte_end":651111,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2776},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":651630,"byte_end":651635,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":652584,"byte_end":652589,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\animation.rs","byte_start":658625,"byte_end":658633,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"kind":{"Impl":{"id":210}},"from":{"krate":2,"index":31402},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662065,"byte_end":662071,"line_start":25,"line_end":25,"column_start":38,"column_end":44},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2847},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662315,"byte_end":662321,"line_start":37,"line_end":37,"column_start":47,"column_end":53},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2847},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662470,"byte_end":662476,"line_start":46,"line_end":46,"column_start":49,"column_end":55},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2847},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":662846,"byte_end":662855,"line_start":64,"line_end":64,"column_start":38,"column_end":47},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2866},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":663111,"byte_end":663120,"line_start":76,"line_end":76,"column_start":47,"column_end":56},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2866},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":663269,"byte_end":663278,"line_start":85,"line_end":85,"column_start":49,"column_end":58},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2866},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":663682,"byte_end":663686,"line_start":105,"line_end":105,"column_start":38,"column_end":42},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2885},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664009,"byte_end":664013,"line_start":119,"line_end":119,"column_start":47,"column_end":51},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2885},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664162,"byte_end":664166,"line_start":128,"line_end":128,"column_start":49,"column_end":53},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2885},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664621,"byte_end":664628,"line_start":148,"line_end":148,"column_start":38,"column_end":45},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2904},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":664964,"byte_end":664971,"line_start":162,"line_end":162,"column_start":47,"column_end":54},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2904},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":665120,"byte_end":665127,"line_start":171,"line_end":171,"column_start":49,"column_end":56},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2904},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":665623,"byte_end":665638,"line_start":194,"line_end":194,"column_start":38,"column_end":53},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":666041,"byte_end":666056,"line_start":212,"line_end":212,"column_start":47,"column_end":62},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":666368,"byte_end":666381,"line_start":231,"line_end":231,"column_start":38,"column_end":51},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2940},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":666919,"byte_end":666932,"line_start":255,"line_end":255,"column_start":47,"column_end":60},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2940},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":667268,"byte_end":667286,"line_start":275,"line_end":275,"column_start":38,"column_end":56},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2956},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":667697,"byte_end":667715,"line_start":293,"line_end":293,"column_start":47,"column_end":65},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2956},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":668033,"byte_end":668049,"line_start":312,"line_end":312,"column_start":38,"column_end":54},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2973},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":668596,"byte_end":668612,"line_start":336,"line_end":336,"column_start":47,"column_end":63},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2973},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":670682,"byte_end":670693,"line_start":406,"line_end":406,"column_start":20,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":676334,"byte_end":676345,"line_start":573,"line_end":573,"column_start":20,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":678515,"byte_end":678526,"line_start":642,"line_end":642,"column_start":20,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":679178,"byte_end":679189,"line_start":667,"line_end":667,"column_start":20,"column_end":31},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":679932,"byte_end":679943,"line_start":694,"line_end":694,"column_start":30,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":680207,"byte_end":680218,"line_start":707,"line_end":707,"column_start":33,"column_end":44},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":1715}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":680484,"byte_end":680495,"line_start":718,"line_end":718,"column_start":42,"column_end":53},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":680766,"byte_end":680777,"line_start":731,"line_end":731,"column_start":45,"column_end":56},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":681038,"byte_end":681049,"line_start":742,"line_end":742,"column_start":30,"column_end":41},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":681408,"byte_end":681419,"line_start":757,"line_end":757,"column_start":41,"column_end":52},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5047},"to":{"krate":0,"index":3549}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":682243,"byte_end":682254,"line_start":790,"line_end":790,"column_start":37,"column_end":48},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5047},"to":{"krate":0,"index":3562}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":685839,"byte_end":685850,"line_start":882,"line_end":882,"column_start":26,"column_end":37},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":688284,"byte_end":688293,"line_start":960,"line_end":960,"column_start":6,"column_end":15},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\buffer.rs","byte_start":689691,"byte_end":689702,"line_start":998,"line_end":998,"column_start":67,"column_end":78},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5047},"to":{"krate":0,"index":3083}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":698642,"byte_end":698651,"line_start":36,"line_end":36,"column_start":6,"column_end":15},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":700980,"byte_end":700997,"line_start":115,"line_end":115,"column_start":6,"column_end":23},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":702285,"byte_end":702302,"line_start":149,"line_end":149,"column_start":26,"column_end":43},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5097},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":708398,"byte_end":708399,"line_start":355,"line_end":355,"column_start":32,"column_end":33},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3132},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":708837,"byte_end":708838,"line_start":369,"line_end":369,"column_start":29,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3139},"to":{"krate":0,"index":3134}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":710094,"byte_end":710098,"line_start":413,"line_end":413,"column_start":53,"column_end":57},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":710327,"byte_end":710331,"line_start":421,"line_end":421,"column_start":53,"column_end":57},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":710559,"byte_end":710563,"line_start":429,"line_end":429,"column_start":52,"column_end":56},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":710788,"byte_end":710792,"line_start":437,"line_end":437,"column_start":52,"column_end":56},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711019,"byte_end":711023,"line_start":445,"line_end":445,"column_start":54,"column_end":58},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711171,"byte_end":711175,"line_start":452,"line_end":452,"column_start":31,"column_end":35},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711419,"byte_end":711423,"line_start":461,"line_end":461,"column_start":30,"column_end":34},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711667,"byte_end":711671,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":711857,"byte_end":711861,"line_start":477,"line_end":477,"column_start":30,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":712047,"byte_end":712051,"line_start":484,"line_end":484,"column_start":32,"column_end":36},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":712288,"byte_end":712293,"line_start":494,"line_end":494,"column_start":53,"column_end":58},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":712555,"byte_end":712560,"line_start":503,"line_end":503,"column_start":53,"column_end":58},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":712821,"byte_end":712826,"line_start":512,"line_end":512,"column_start":52,"column_end":57},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":713091,"byte_end":713096,"line_start":521,"line_end":521,"column_start":52,"column_end":57},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":713362,"byte_end":713367,"line_start":530,"line_end":530,"column_start":53,"column_end":58},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":713580,"byte_end":713585,"line_start":538,"line_end":538,"column_start":32,"column_end":37},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":713885,"byte_end":713890,"line_start":548,"line_end":548,"column_start":31,"column_end":36},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":714233,"byte_end":714237,"line_start":561,"line_end":561,"column_start":52,"column_end":56},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":714538,"byte_end":714542,"line_start":572,"line_end":572,"column_start":52,"column_end":56},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":714844,"byte_end":714848,"line_start":583,"line_end":583,"column_start":53,"column_end":57},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":715149,"byte_end":715153,"line_start":594,"line_end":594,"column_start":54,"column_end":58},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":715454,"byte_end":715458,"line_start":605,"line_end":605,"column_start":53,"column_end":57},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":715735,"byte_end":715739,"line_start":616,"line_end":616,"column_start":31,"column_end":35},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":716101,"byte_end":716105,"line_start":627,"line_end":627,"column_start":30,"column_end":34},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":716502,"byte_end":716506,"line_start":641,"line_end":641,"column_start":52,"column_end":56},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5579},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":716807,"byte_end":716811,"line_start":652,"line_end":652,"column_start":52,"column_end":56},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5579},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":717113,"byte_end":717117,"line_start":663,"line_end":663,"column_start":53,"column_end":57},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5579},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":717418,"byte_end":717422,"line_start":674,"line_end":674,"column_start":54,"column_end":58},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5579},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":717723,"byte_end":717727,"line_start":685,"line_end":685,"column_start":53,"column_end":57},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5579},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":718051,"byte_end":718054,"line_start":699,"line_end":699,"column_start":53,"column_end":56},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":718323,"byte_end":718326,"line_start":709,"line_end":709,"column_start":53,"column_end":56},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":718594,"byte_end":718597,"line_start":719,"line_end":719,"column_start":52,"column_end":55},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":718862,"byte_end":718865,"line_start":729,"line_end":729,"column_start":54,"column_end":57},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":719129,"byte_end":719132,"line_start":739,"line_end":739,"column_start":53,"column_end":56},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":719370,"byte_end":719373,"line_start":749,"line_end":749,"column_start":30,"column_end":33},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":719598,"byte_end":719601,"line_start":757,"line_end":757,"column_start":29,"column_end":32},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":719874,"byte_end":719877,"line_start":768,"line_end":768,"column_start":53,"column_end":56},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5492},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":720145,"byte_end":720148,"line_start":778,"line_end":778,"column_start":52,"column_end":55},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5492},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":720413,"byte_end":720416,"line_start":789,"line_end":789,"column_start":53,"column_end":56},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5492},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":720686,"byte_end":720689,"line_start":799,"line_end":799,"column_start":54,"column_end":57},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5492},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":720953,"byte_end":720956,"line_start":809,"line_end":809,"column_start":53,"column_end":56},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5492},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":722622,"byte_end":722627,"line_start":863,"line_end":863,"column_start":30,"column_end":35},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3262}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":723632,"byte_end":723636,"line_start":896,"line_end":896,"column_start":30,"column_end":34},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3262}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":723746,"byte_end":723750,"line_start":902,"line_end":902,"column_start":30,"column_end":34},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3262}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":725958,"byte_end":725962,"line_start":960,"line_end":960,"column_start":30,"column_end":34},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5579},"to":{"krate":0,"index":3262}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728168,"byte_end":728171,"line_start":1016,"line_end":1016,"column_start":30,"column_end":33},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3262}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728280,"byte_end":728283,"line_start":1022,"line_end":1022,"column_start":30,"column_end":33},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5492},"to":{"krate":0,"index":3262}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728502,"byte_end":728507,"line_start":1035,"line_end":1035,"column_start":31,"column_end":36},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3282}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728680,"byte_end":728684,"line_start":1044,"line_end":1044,"column_start":31,"column_end":35},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3282}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":728872,"byte_end":728876,"line_start":1055,"line_end":1055,"column_start":31,"column_end":35},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":3282}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":729089,"byte_end":729093,"line_start":1066,"line_end":1066,"column_start":31,"column_end":35},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5579},"to":{"krate":0,"index":3282}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":729306,"byte_end":729309,"line_start":1077,"line_end":1077,"column_start":31,"column_end":34},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5463},"to":{"krate":0,"index":3282}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\color.rs","byte_start":729571,"byte_end":729574,"line_start":1091,"line_end":1091,"column_start":31,"column_end":34},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5492},"to":{"krate":0,"index":3282}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":741099,"byte_end":741111,"line_start":133,"line_end":133,"column_start":6,"column_end":18},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":765345,"byte_end":765357,"line_start":806,"line_end":806,"column_start":27,"column_end":39},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5688},"to":{"krate":0,"index":3549}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\dynimage.rs","byte_start":765890,"byte_end":765902,"line_start":828,"line_end":828,"column_start":23,"column_end":35},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5688},"to":{"krate":0,"index":3562}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":780179,"byte_end":780190,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":781600,"byte_end":781617,"line_start":113,"line_end":113,"column_start":28,"column_end":45},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5764},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":782756,"byte_end":782771,"line_start":146,"line_end":146,"column_start":6,"column_end":21},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":790418,"byte_end":790426,"line_start":324,"line_end":324,"column_start":6,"column_end":14},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":790932,"byte_end":790937,"line_start":344,"line_end":344,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3512}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":794633,"byte_end":794645,"line_start":441,"line_end":441,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":3512},"to":{"krate":0,"index":3525}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":794652,"byte_end":794657,"line_start":441,"line_end":441,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3525}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":797057,"byte_end":797063,"line_start":513,"line_end":513,"column_start":44,"column_end":50},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":799868,"byte_end":799884,"line_start":611,"line_end":611,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3549},"to":{"krate":0,"index":3562}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":805208,"byte_end":805216,"line_start":751,"line_end":751,"column_start":9,"column_end":17},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":806353,"byte_end":806361,"line_start":792,"line_end":792,"column_start":30,"column_end":38},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3574},"to":{"krate":0,"index":3549}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\image.rs","byte_start":807182,"byte_end":807190,"line_start":824,"line_end":824,"column_start":26,"column_end":34},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":3574},"to":{"krate":0,"index":3562}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818550,"byte_end":818565,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":3692},"to":{"krate":0,"index":3621}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818919,"byte_end":818923,"line_start":30,"line_end":30,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":3627}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818926,"byte_end":818933,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":19,"index":170},"to":{"krate":0,"index":3627}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818936,"byte_end":818939,"line_start":30,"line_end":30,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":19,"index":564},"to":{"krate":0,"index":3627}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818942,"byte_end":818952,"line_start":30,"line_end":30,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2077},"to":{"krate":0,"index":3627}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818961,"byte_end":818966,"line_start":30,"line_end":30,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":3627}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":818969,"byte_end":818976,"line_start":30,"line_end":30,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":19,"index":87},"to":{"krate":0,"index":3627}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":819452,"byte_end":819457,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3640}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":819460,"byte_end":819467,"line_start":47,"line_end":47,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":19,"index":87},"to":{"krate":0,"index":3640}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":819470,"byte_end":819477,"line_start":47,"line_end":47,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":19,"index":170},"to":{"krate":0,"index":3640}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820081,"byte_end":820085,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":3649}},{"span":{"file_name":"C:\\Users\\Spencer Du\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.4\\./src\\traits.rs","byte_start":820088,"byte_end":820093,"line_start":73,"line_end":73,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":3649}}]}